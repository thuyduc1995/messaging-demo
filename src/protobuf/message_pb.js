// source: message.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.admv2_remote.Channel', null, global);
goog.exportSymbol('proto.admv2_remote.ChannelOperation', null, global);
goog.exportSymbol('proto.admv2_remote.ChannelUsers', null, global);
goog.exportSymbol('proto.admv2_remote.ChatMessageType', null, global);
goog.exportSymbol('proto.admv2_remote.CommunicationPayload', null, global);
goog.exportSymbol('proto.admv2_remote.CommunicationPayload.FieldCase', null, global);
goog.exportSymbol('proto.admv2_remote.Content', null, global);
goog.exportSymbol('proto.admv2_remote.Content.PayloadCase', null, global);
goog.exportSymbol('proto.admv2_remote.CreateVoiceCall', null, global);
goog.exportSymbol('proto.admv2_remote.EndBroadcast', null, global);
goog.exportSymbol('proto.admv2_remote.ErrorCode', null, global);
goog.exportSymbol('proto.admv2_remote.ErrorMessage', null, global);
goog.exportSymbol('proto.admv2_remote.GatherIceCandidate', null, global);
goog.exportSymbol('proto.admv2_remote.IceCandidate', null, global);
goog.exportSymbol('proto.admv2_remote.JoinVoiceCall', null, global);
goog.exportSymbol('proto.admv2_remote.Jsep', null, global);
goog.exportSymbol('proto.admv2_remote.LeaveVoiceCall', null, global);
goog.exportSymbol('proto.admv2_remote.SdpType', null, global);
goog.exportSymbol('proto.admv2_remote.SendMessage', null, global);
goog.exportSymbol('proto.admv2_remote.StartBroadcast', null, global);
goog.exportSymbol('proto.admv2_remote.StopVoiceCall', null, global);
goog.exportSymbol('proto.admv2_remote.Type', null, global);
goog.exportSymbol('proto.admv2_remote.UsherMessage', null, global);
goog.exportSymbol('proto.admv2_remote.VoiceCallCreated', null, global);
goog.exportSymbol('proto.admv2_remote.VoiceCallJoinAccepted', null, global);
goog.exportSymbol('proto.admv2_remote.VoiceCallJoined', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.Jsep = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.Jsep, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.Jsep.displayName = 'proto.admv2_remote.Jsep';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.IceCandidate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.IceCandidate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.IceCandidate.displayName = 'proto.admv2_remote.IceCandidate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.ErrorMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.ErrorMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.ErrorMessage.displayName = 'proto.admv2_remote.ErrorMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.Channel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.Channel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.Channel.displayName = 'proto.admv2_remote.Channel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.ChannelUsers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.admv2_remote.ChannelUsers.repeatedFields_, null);
};
goog.inherits(proto.admv2_remote.ChannelUsers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.ChannelUsers.displayName = 'proto.admv2_remote.ChannelUsers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.SendMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.SendMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.SendMessage.displayName = 'proto.admv2_remote.SendMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.CreateVoiceCall = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.CreateVoiceCall, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.CreateVoiceCall.displayName = 'proto.admv2_remote.CreateVoiceCall';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.JoinVoiceCall = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.JoinVoiceCall, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.JoinVoiceCall.displayName = 'proto.admv2_remote.JoinVoiceCall';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.LeaveVoiceCall = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.LeaveVoiceCall, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.LeaveVoiceCall.displayName = 'proto.admv2_remote.LeaveVoiceCall';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.StopVoiceCall = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.StopVoiceCall, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.StopVoiceCall.displayName = 'proto.admv2_remote.StopVoiceCall';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.StartBroadcast = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.StartBroadcast, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.StartBroadcast.displayName = 'proto.admv2_remote.StartBroadcast';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.EndBroadcast = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.EndBroadcast, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.EndBroadcast.displayName = 'proto.admv2_remote.EndBroadcast';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.GatherIceCandidate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.admv2_remote.GatherIceCandidate.repeatedFields_, null);
};
goog.inherits(proto.admv2_remote.GatherIceCandidate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.GatherIceCandidate.displayName = 'proto.admv2_remote.GatherIceCandidate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.VoiceCallCreated = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.VoiceCallCreated, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.VoiceCallCreated.displayName = 'proto.admv2_remote.VoiceCallCreated';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.VoiceCallJoinAccepted = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.admv2_remote.VoiceCallJoinAccepted.repeatedFields_, null);
};
goog.inherits(proto.admv2_remote.VoiceCallJoinAccepted, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.VoiceCallJoinAccepted.displayName = 'proto.admv2_remote.VoiceCallJoinAccepted';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.VoiceCallJoined = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.VoiceCallJoined, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.VoiceCallJoined.displayName = 'proto.admv2_remote.VoiceCallJoined';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.CommunicationPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.admv2_remote.CommunicationPayload.oneofGroups_);
};
goog.inherits(proto.admv2_remote.CommunicationPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.CommunicationPayload.displayName = 'proto.admv2_remote.CommunicationPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.Content = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.admv2_remote.Content.oneofGroups_);
};
goog.inherits(proto.admv2_remote.Content, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.Content.displayName = 'proto.admv2_remote.Content';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.UsherMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.UsherMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.UsherMessage.displayName = 'proto.admv2_remote.UsherMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.Jsep.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.Jsep.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.Jsep} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.Jsep.toObject = function(includeInstance, msg) {
  var f, obj = {
    sdp: jspb.Message.getFieldWithDefault(msg, 10, ""),
    type: jspb.Message.getFieldWithDefault(msg, 20, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.Jsep}
 */
proto.admv2_remote.Jsep.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.Jsep;
  return proto.admv2_remote.Jsep.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.Jsep} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.Jsep}
 */
proto.admv2_remote.Jsep.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSdp(value);
      break;
    case 20:
      var value = /** @type {!proto.admv2_remote.SdpType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.Jsep.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.Jsep.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.Jsep} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.Jsep.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSdp();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      20,
      f
    );
  }
};


/**
 * optional string sdp = 10;
 * @return {string}
 */
proto.admv2_remote.Jsep.prototype.getSdp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.Jsep} returns this
 */
proto.admv2_remote.Jsep.prototype.setSdp = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional SdpType type = 20;
 * @return {!proto.admv2_remote.SdpType}
 */
proto.admv2_remote.Jsep.prototype.getType = function() {
  return /** @type {!proto.admv2_remote.SdpType} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {!proto.admv2_remote.SdpType} value
 * @return {!proto.admv2_remote.Jsep} returns this
 */
proto.admv2_remote.Jsep.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.IceCandidate.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.IceCandidate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.IceCandidate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.IceCandidate.toObject = function(includeInstance, msg) {
  var f, obj = {
    candidate: jspb.Message.getFieldWithDefault(msg, 10, ""),
    sdpMLineIndex: jspb.Message.getFieldWithDefault(msg, 20, 0),
    sdpMid: jspb.Message.getFieldWithDefault(msg, 30, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.IceCandidate}
 */
proto.admv2_remote.IceCandidate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.IceCandidate;
  return proto.admv2_remote.IceCandidate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.IceCandidate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.IceCandidate}
 */
proto.admv2_remote.IceCandidate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCandidate(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSdpMLineIndex(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setSdpMid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.IceCandidate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.IceCandidate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.IceCandidate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.IceCandidate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandidate();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSdpMLineIndex();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getSdpMid();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
};


/**
 * optional string candidate = 10;
 * @return {string}
 */
proto.admv2_remote.IceCandidate.prototype.getCandidate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.IceCandidate} returns this
 */
proto.admv2_remote.IceCandidate.prototype.setCandidate = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 sdp_m_line_index = 20;
 * @return {number}
 */
proto.admv2_remote.IceCandidate.prototype.getSdpMLineIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.admv2_remote.IceCandidate} returns this
 */
proto.admv2_remote.IceCandidate.prototype.setSdpMLineIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional string sdp_mid = 30;
 * @return {string}
 */
proto.admv2_remote.IceCandidate.prototype.getSdpMid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.IceCandidate} returns this
 */
proto.admv2_remote.IceCandidate.prototype.setSdpMid = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.ErrorMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.ErrorMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.ErrorMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.ErrorMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 10, 0),
    message: jspb.Message.getFieldWithDefault(msg, 20, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 30, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.ErrorMessage}
 */
proto.admv2_remote.ErrorMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.ErrorMessage;
  return proto.admv2_remote.ErrorMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.ErrorMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.ErrorMessage}
 */
proto.admv2_remote.ErrorMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {!proto.admv2_remote.ErrorCode} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.ErrorMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.ErrorMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.ErrorMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.ErrorMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
};


/**
 * optional ErrorCode code = 10;
 * @return {!proto.admv2_remote.ErrorCode}
 */
proto.admv2_remote.ErrorMessage.prototype.getCode = function() {
  return /** @type {!proto.admv2_remote.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.admv2_remote.ErrorCode} value
 * @return {!proto.admv2_remote.ErrorMessage} returns this
 */
proto.admv2_remote.ErrorMessage.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional string message = 20;
 * @return {string}
 */
proto.admv2_remote.ErrorMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.ErrorMessage} returns this
 */
proto.admv2_remote.ErrorMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string reason = 30;
 * @return {string}
 */
proto.admv2_remote.ErrorMessage.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.ErrorMessage} returns this
 */
proto.admv2_remote.ErrorMessage.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.Channel.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.Channel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.Channel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.Channel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 10, ""),
    title: jspb.Message.getFieldWithDefault(msg, 20, ""),
    description: jspb.Message.getFieldWithDefault(msg, 30, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.Channel}
 */
proto.admv2_remote.Channel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.Channel;
  return proto.admv2_remote.Channel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.Channel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.Channel}
 */
proto.admv2_remote.Channel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.Channel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.Channel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.Channel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.Channel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
};


/**
 * optional string id = 10;
 * @return {string}
 */
proto.admv2_remote.Channel.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.Channel} returns this
 */
proto.admv2_remote.Channel.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string title = 20;
 * @return {string}
 */
proto.admv2_remote.Channel.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.Channel} returns this
 */
proto.admv2_remote.Channel.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string description = 30;
 * @return {string}
 */
proto.admv2_remote.Channel.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.Channel} returns this
 */
proto.admv2_remote.Channel.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.admv2_remote.ChannelUsers.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.ChannelUsers.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.ChannelUsers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.ChannelUsers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.ChannelUsers.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.ChannelUsers}
 */
proto.admv2_remote.ChannelUsers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.ChannelUsers;
  return proto.admv2_remote.ChannelUsers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.ChannelUsers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.ChannelUsers}
 */
proto.admv2_remote.ChannelUsers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addConnections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.ChannelUsers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.ChannelUsers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.ChannelUsers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.ChannelUsers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
};


/**
 * repeated string connections = 10;
 * @return {!Array<string>}
 */
proto.admv2_remote.ChannelUsers.prototype.getConnectionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.admv2_remote.ChannelUsers} returns this
 */
proto.admv2_remote.ChannelUsers.prototype.setConnectionsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.admv2_remote.ChannelUsers} returns this
 */
proto.admv2_remote.ChannelUsers.prototype.addConnections = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.admv2_remote.ChannelUsers} returns this
 */
proto.admv2_remote.ChannelUsers.prototype.clearConnectionsList = function() {
  return this.setConnectionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.SendMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.SendMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.SendMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.SendMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 10, 0),
    content: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.SendMessage}
 */
proto.admv2_remote.SendMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.SendMessage;
  return proto.admv2_remote.SendMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.SendMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.SendMessage}
 */
proto.admv2_remote.SendMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {!proto.admv2_remote.ChatMessageType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.SendMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.SendMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.SendMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.SendMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional ChatMessageType type = 10;
 * @return {!proto.admv2_remote.ChatMessageType}
 */
proto.admv2_remote.SendMessage.prototype.getType = function() {
  return /** @type {!proto.admv2_remote.ChatMessageType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.admv2_remote.ChatMessageType} value
 * @return {!proto.admv2_remote.SendMessage} returns this
 */
proto.admv2_remote.SendMessage.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional string content = 20;
 * @return {string}
 */
proto.admv2_remote.SendMessage.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.SendMessage} returns this
 */
proto.admv2_remote.SendMessage.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.CreateVoiceCall.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.CreateVoiceCall.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.CreateVoiceCall} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.CreateVoiceCall.toObject = function(includeInstance, msg) {
  var f, obj = {
    muted: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.CreateVoiceCall}
 */
proto.admv2_remote.CreateVoiceCall.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.CreateVoiceCall;
  return proto.admv2_remote.CreateVoiceCall.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.CreateVoiceCall} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.CreateVoiceCall}
 */
proto.admv2_remote.CreateVoiceCall.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMuted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.CreateVoiceCall.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.CreateVoiceCall.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.CreateVoiceCall} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.CreateVoiceCall.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMuted();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional bool muted = 10;
 * @return {boolean}
 */
proto.admv2_remote.CreateVoiceCall.prototype.getMuted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.admv2_remote.CreateVoiceCall} returns this
 */
proto.admv2_remote.CreateVoiceCall.prototype.setMuted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.JoinVoiceCall.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.JoinVoiceCall.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.JoinVoiceCall} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.JoinVoiceCall.toObject = function(includeInstance, msg) {
  var f, obj = {
    muted: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    sdpOffer: (f = msg.getSdpOffer()) && proto.admv2_remote.Jsep.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.JoinVoiceCall}
 */
proto.admv2_remote.JoinVoiceCall.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.JoinVoiceCall;
  return proto.admv2_remote.JoinVoiceCall.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.JoinVoiceCall} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.JoinVoiceCall}
 */
proto.admv2_remote.JoinVoiceCall.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMuted(value);
      break;
    case 20:
      var value = new proto.admv2_remote.Jsep;
      reader.readMessage(value,proto.admv2_remote.Jsep.deserializeBinaryFromReader);
      msg.setSdpOffer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.JoinVoiceCall.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.JoinVoiceCall.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.JoinVoiceCall} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.JoinVoiceCall.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMuted();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getSdpOffer();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.admv2_remote.Jsep.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool muted = 10;
 * @return {boolean}
 */
proto.admv2_remote.JoinVoiceCall.prototype.getMuted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.admv2_remote.JoinVoiceCall} returns this
 */
proto.admv2_remote.JoinVoiceCall.prototype.setMuted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional Jsep sdp_offer = 20;
 * @return {?proto.admv2_remote.Jsep}
 */
proto.admv2_remote.JoinVoiceCall.prototype.getSdpOffer = function() {
  return /** @type{?proto.admv2_remote.Jsep} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.Jsep, 20));
};


/**
 * @param {?proto.admv2_remote.Jsep|undefined} value
 * @return {!proto.admv2_remote.JoinVoiceCall} returns this
*/
proto.admv2_remote.JoinVoiceCall.prototype.setSdpOffer = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.JoinVoiceCall} returns this
 */
proto.admv2_remote.JoinVoiceCall.prototype.clearSdpOffer = function() {
  return this.setSdpOffer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.JoinVoiceCall.prototype.hasSdpOffer = function() {
  return jspb.Message.getField(this, 20) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.LeaveVoiceCall.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.LeaveVoiceCall.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.LeaveVoiceCall} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.LeaveVoiceCall.toObject = function(includeInstance, msg) {
  var f, obj = {
    participant: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.LeaveVoiceCall}
 */
proto.admv2_remote.LeaveVoiceCall.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.LeaveVoiceCall;
  return proto.admv2_remote.LeaveVoiceCall.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.LeaveVoiceCall} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.LeaveVoiceCall}
 */
proto.admv2_remote.LeaveVoiceCall.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setParticipant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.LeaveVoiceCall.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.LeaveVoiceCall.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.LeaveVoiceCall} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.LeaveVoiceCall.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParticipant();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string participant = 10;
 * @return {string}
 */
proto.admv2_remote.LeaveVoiceCall.prototype.getParticipant = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.LeaveVoiceCall} returns this
 */
proto.admv2_remote.LeaveVoiceCall.prototype.setParticipant = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.StopVoiceCall.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.StopVoiceCall.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.StopVoiceCall} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.StopVoiceCall.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.StopVoiceCall}
 */
proto.admv2_remote.StopVoiceCall.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.StopVoiceCall;
  return proto.admv2_remote.StopVoiceCall.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.StopVoiceCall} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.StopVoiceCall}
 */
proto.admv2_remote.StopVoiceCall.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.StopVoiceCall.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.StopVoiceCall.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.StopVoiceCall} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.StopVoiceCall.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.StartBroadcast.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.StartBroadcast.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.StartBroadcast} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.StartBroadcast.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.StartBroadcast}
 */
proto.admv2_remote.StartBroadcast.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.StartBroadcast;
  return proto.admv2_remote.StartBroadcast.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.StartBroadcast} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.StartBroadcast}
 */
proto.admv2_remote.StartBroadcast.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.StartBroadcast.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.StartBroadcast.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.StartBroadcast} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.StartBroadcast.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.EndBroadcast.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.EndBroadcast.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.EndBroadcast} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.EndBroadcast.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.EndBroadcast}
 */
proto.admv2_remote.EndBroadcast.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.EndBroadcast;
  return proto.admv2_remote.EndBroadcast.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.EndBroadcast} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.EndBroadcast}
 */
proto.admv2_remote.EndBroadcast.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.EndBroadcast.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.EndBroadcast.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.EndBroadcast} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.EndBroadcast.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.admv2_remote.GatherIceCandidate.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.GatherIceCandidate.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.GatherIceCandidate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.GatherIceCandidate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.GatherIceCandidate.toObject = function(includeInstance, msg) {
  var f, obj = {
    candidatesList: jspb.Message.toObjectList(msg.getCandidatesList(),
    proto.admv2_remote.IceCandidate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.GatherIceCandidate}
 */
proto.admv2_remote.GatherIceCandidate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.GatherIceCandidate;
  return proto.admv2_remote.GatherIceCandidate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.GatherIceCandidate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.GatherIceCandidate}
 */
proto.admv2_remote.GatherIceCandidate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = new proto.admv2_remote.IceCandidate;
      reader.readMessage(value,proto.admv2_remote.IceCandidate.deserializeBinaryFromReader);
      msg.addCandidates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.GatherIceCandidate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.GatherIceCandidate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.GatherIceCandidate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.GatherIceCandidate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandidatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.admv2_remote.IceCandidate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated IceCandidate candidates = 10;
 * @return {!Array<!proto.admv2_remote.IceCandidate>}
 */
proto.admv2_remote.GatherIceCandidate.prototype.getCandidatesList = function() {
  return /** @type{!Array<!proto.admv2_remote.IceCandidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.admv2_remote.IceCandidate, 10));
};


/**
 * @param {!Array<!proto.admv2_remote.IceCandidate>} value
 * @return {!proto.admv2_remote.GatherIceCandidate} returns this
*/
proto.admv2_remote.GatherIceCandidate.prototype.setCandidatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.admv2_remote.IceCandidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.admv2_remote.IceCandidate}
 */
proto.admv2_remote.GatherIceCandidate.prototype.addCandidates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.admv2_remote.IceCandidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.admv2_remote.GatherIceCandidate} returns this
 */
proto.admv2_remote.GatherIceCandidate.prototype.clearCandidatesList = function() {
  return this.setCandidatesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.VoiceCallCreated.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.VoiceCallCreated.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.VoiceCallCreated} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.VoiceCallCreated.toObject = function(includeInstance, msg) {
  var f, obj = {
    ownerId: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.VoiceCallCreated}
 */
proto.admv2_remote.VoiceCallCreated.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.VoiceCallCreated;
  return proto.admv2_remote.VoiceCallCreated.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.VoiceCallCreated} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.VoiceCallCreated}
 */
proto.admv2_remote.VoiceCallCreated.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.VoiceCallCreated.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.VoiceCallCreated.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.VoiceCallCreated} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.VoiceCallCreated.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwnerId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string owner_id = 10;
 * @return {string}
 */
proto.admv2_remote.VoiceCallCreated.prototype.getOwnerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.VoiceCallCreated} returns this
 */
proto.admv2_remote.VoiceCallCreated.prototype.setOwnerId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.admv2_remote.VoiceCallJoinAccepted.repeatedFields_ = [30];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.VoiceCallJoinAccepted.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.VoiceCallJoinAccepted.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.VoiceCallJoinAccepted} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.VoiceCallJoinAccepted.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: jspb.Message.getFieldWithDefault(msg, 10, ""),
    participant: jspb.Message.getFieldWithDefault(msg, 20, ""),
    participantsList: (f = jspb.Message.getRepeatedField(msg, 30)) == null ? undefined : f,
    sdpAnswer: (f = msg.getSdpAnswer()) && proto.admv2_remote.Jsep.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.VoiceCallJoinAccepted}
 */
proto.admv2_remote.VoiceCallJoinAccepted.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.VoiceCallJoinAccepted;
  return proto.admv2_remote.VoiceCallJoinAccepted.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.VoiceCallJoinAccepted} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.VoiceCallJoinAccepted}
 */
proto.admv2_remote.VoiceCallJoinAccepted.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransaction(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setParticipant(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.addParticipants(value);
      break;
    case 40:
      var value = new proto.admv2_remote.Jsep;
      reader.readMessage(value,proto.admv2_remote.Jsep.deserializeBinaryFromReader);
      msg.setSdpAnswer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.VoiceCallJoinAccepted.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.VoiceCallJoinAccepted.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.VoiceCallJoinAccepted} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.VoiceCallJoinAccepted.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getParticipant();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getParticipantsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      30,
      f
    );
  }
  f = message.getSdpAnswer();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.admv2_remote.Jsep.serializeBinaryToWriter
    );
  }
};


/**
 * optional string transaction = 10;
 * @return {string}
 */
proto.admv2_remote.VoiceCallJoinAccepted.prototype.getTransaction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.VoiceCallJoinAccepted} returns this
 */
proto.admv2_remote.VoiceCallJoinAccepted.prototype.setTransaction = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string participant = 20;
 * @return {string}
 */
proto.admv2_remote.VoiceCallJoinAccepted.prototype.getParticipant = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.VoiceCallJoinAccepted} returns this
 */
proto.admv2_remote.VoiceCallJoinAccepted.prototype.setParticipant = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * repeated string participants = 30;
 * @return {!Array<string>}
 */
proto.admv2_remote.VoiceCallJoinAccepted.prototype.getParticipantsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 30));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.admv2_remote.VoiceCallJoinAccepted} returns this
 */
proto.admv2_remote.VoiceCallJoinAccepted.prototype.setParticipantsList = function(value) {
  return jspb.Message.setField(this, 30, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.admv2_remote.VoiceCallJoinAccepted} returns this
 */
proto.admv2_remote.VoiceCallJoinAccepted.prototype.addParticipants = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 30, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.admv2_remote.VoiceCallJoinAccepted} returns this
 */
proto.admv2_remote.VoiceCallJoinAccepted.prototype.clearParticipantsList = function() {
  return this.setParticipantsList([]);
};


/**
 * optional Jsep sdp_answer = 40;
 * @return {?proto.admv2_remote.Jsep}
 */
proto.admv2_remote.VoiceCallJoinAccepted.prototype.getSdpAnswer = function() {
  return /** @type{?proto.admv2_remote.Jsep} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.Jsep, 40));
};


/**
 * @param {?proto.admv2_remote.Jsep|undefined} value
 * @return {!proto.admv2_remote.VoiceCallJoinAccepted} returns this
*/
proto.admv2_remote.VoiceCallJoinAccepted.prototype.setSdpAnswer = function(value) {
  return jspb.Message.setWrapperField(this, 40, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.VoiceCallJoinAccepted} returns this
 */
proto.admv2_remote.VoiceCallJoinAccepted.prototype.clearSdpAnswer = function() {
  return this.setSdpAnswer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.VoiceCallJoinAccepted.prototype.hasSdpAnswer = function() {
  return jspb.Message.getField(this, 40) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.VoiceCallJoined.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.VoiceCallJoined.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.VoiceCallJoined} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.VoiceCallJoined.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: jspb.Message.getFieldWithDefault(msg, 10, ""),
    participant: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.VoiceCallJoined}
 */
proto.admv2_remote.VoiceCallJoined.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.VoiceCallJoined;
  return proto.admv2_remote.VoiceCallJoined.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.VoiceCallJoined} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.VoiceCallJoined}
 */
proto.admv2_remote.VoiceCallJoined.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransaction(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setParticipant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.VoiceCallJoined.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.VoiceCallJoined.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.VoiceCallJoined} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.VoiceCallJoined.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getParticipant();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional string transaction = 10;
 * @return {string}
 */
proto.admv2_remote.VoiceCallJoined.prototype.getTransaction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.VoiceCallJoined} returns this
 */
proto.admv2_remote.VoiceCallJoined.prototype.setTransaction = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string participant = 20;
 * @return {string}
 */
proto.admv2_remote.VoiceCallJoined.prototype.getParticipant = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.VoiceCallJoined} returns this
 */
proto.admv2_remote.VoiceCallJoined.prototype.setParticipant = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.admv2_remote.CommunicationPayload.oneofGroups_ = [[30,40,50,60,70,80,90,100,110,120,130,140,150,2]];

/**
 * @enum {number}
 */
proto.admv2_remote.CommunicationPayload.FieldCase = {
  FIELD_NOT_SET: 0,
  ERROR_MESSAGE: 30,
  CREATE_VOICE_CALL: 40,
  JOIN_VOICE_CALL: 50,
  LEAVE_VOICE_CALL: 60,
  STOP_VOICE_CALL: 70,
  START_BROADCAST: 80,
  END_BROADCAST: 90,
  GATHER_ICE_CANDIDATE: 100,
  SEND_MESSAGE: 110,
  VOICE_CALL_CREATED: 120,
  VOICE_CALL_JOIN_ACCEPTED: 130,
  VOICE_CALL_JOINED: 140,
  NEW_REGISTRATION_TOKEN: 150,
  USERNAME: 2
};

/**
 * @return {proto.admv2_remote.CommunicationPayload.FieldCase}
 */
proto.admv2_remote.CommunicationPayload.prototype.getFieldCase = function() {
  return /** @type {proto.admv2_remote.CommunicationPayload.FieldCase} */(jspb.Message.computeOneofCase(this, proto.admv2_remote.CommunicationPayload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.CommunicationPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.CommunicationPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.CommunicationPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.CommunicationPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    epoch: jspb.Message.getFieldWithDefault(msg, 10, 0),
    channelId: jspb.Message.getFieldWithDefault(msg, 20, ""),
    errorMessage: (f = msg.getErrorMessage()) && proto.admv2_remote.ErrorMessage.toObject(includeInstance, f),
    createVoiceCall: (f = msg.getCreateVoiceCall()) && proto.admv2_remote.CreateVoiceCall.toObject(includeInstance, f),
    joinVoiceCall: (f = msg.getJoinVoiceCall()) && proto.admv2_remote.JoinVoiceCall.toObject(includeInstance, f),
    leaveVoiceCall: (f = msg.getLeaveVoiceCall()) && proto.admv2_remote.LeaveVoiceCall.toObject(includeInstance, f),
    stopVoiceCall: (f = msg.getStopVoiceCall()) && proto.admv2_remote.StopVoiceCall.toObject(includeInstance, f),
    startBroadcast: (f = msg.getStartBroadcast()) && proto.admv2_remote.StartBroadcast.toObject(includeInstance, f),
    endBroadcast: (f = msg.getEndBroadcast()) && proto.admv2_remote.EndBroadcast.toObject(includeInstance, f),
    gatherIceCandidate: (f = msg.getGatherIceCandidate()) && proto.admv2_remote.GatherIceCandidate.toObject(includeInstance, f),
    sendMessage: (f = msg.getSendMessage()) && proto.admv2_remote.SendMessage.toObject(includeInstance, f),
    voiceCallCreated: (f = msg.getVoiceCallCreated()) && proto.admv2_remote.VoiceCallCreated.toObject(includeInstance, f),
    voiceCallJoinAccepted: (f = msg.getVoiceCallJoinAccepted()) && proto.admv2_remote.VoiceCallJoinAccepted.toObject(includeInstance, f),
    voiceCallJoined: (f = msg.getVoiceCallJoined()) && proto.admv2_remote.VoiceCallJoined.toObject(includeInstance, f),
    newRegistrationToken: jspb.Message.getFieldWithDefault(msg, 150, ""),
    username: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.CommunicationPayload}
 */
proto.admv2_remote.CommunicationPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.CommunicationPayload;
  return proto.admv2_remote.CommunicationPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.CommunicationPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.CommunicationPayload}
 */
proto.admv2_remote.CommunicationPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEpoch(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 30:
      var value = new proto.admv2_remote.ErrorMessage;
      reader.readMessage(value,proto.admv2_remote.ErrorMessage.deserializeBinaryFromReader);
      msg.setErrorMessage(value);
      break;
    case 40:
      var value = new proto.admv2_remote.CreateVoiceCall;
      reader.readMessage(value,proto.admv2_remote.CreateVoiceCall.deserializeBinaryFromReader);
      msg.setCreateVoiceCall(value);
      break;
    case 50:
      var value = new proto.admv2_remote.JoinVoiceCall;
      reader.readMessage(value,proto.admv2_remote.JoinVoiceCall.deserializeBinaryFromReader);
      msg.setJoinVoiceCall(value);
      break;
    case 60:
      var value = new proto.admv2_remote.LeaveVoiceCall;
      reader.readMessage(value,proto.admv2_remote.LeaveVoiceCall.deserializeBinaryFromReader);
      msg.setLeaveVoiceCall(value);
      break;
    case 70:
      var value = new proto.admv2_remote.StopVoiceCall;
      reader.readMessage(value,proto.admv2_remote.StopVoiceCall.deserializeBinaryFromReader);
      msg.setStopVoiceCall(value);
      break;
    case 80:
      var value = new proto.admv2_remote.StartBroadcast;
      reader.readMessage(value,proto.admv2_remote.StartBroadcast.deserializeBinaryFromReader);
      msg.setStartBroadcast(value);
      break;
    case 90:
      var value = new proto.admv2_remote.EndBroadcast;
      reader.readMessage(value,proto.admv2_remote.EndBroadcast.deserializeBinaryFromReader);
      msg.setEndBroadcast(value);
      break;
    case 100:
      var value = new proto.admv2_remote.GatherIceCandidate;
      reader.readMessage(value,proto.admv2_remote.GatherIceCandidate.deserializeBinaryFromReader);
      msg.setGatherIceCandidate(value);
      break;
    case 110:
      var value = new proto.admv2_remote.SendMessage;
      reader.readMessage(value,proto.admv2_remote.SendMessage.deserializeBinaryFromReader);
      msg.setSendMessage(value);
      break;
    case 120:
      var value = new proto.admv2_remote.VoiceCallCreated;
      reader.readMessage(value,proto.admv2_remote.VoiceCallCreated.deserializeBinaryFromReader);
      msg.setVoiceCallCreated(value);
      break;
    case 130:
      var value = new proto.admv2_remote.VoiceCallJoinAccepted;
      reader.readMessage(value,proto.admv2_remote.VoiceCallJoinAccepted.deserializeBinaryFromReader);
      msg.setVoiceCallJoinAccepted(value);
      break;
    case 140:
      var value = new proto.admv2_remote.VoiceCallJoined;
      reader.readMessage(value,proto.admv2_remote.VoiceCallJoined.deserializeBinaryFromReader);
      msg.setVoiceCallJoined(value);
      break;
    case 150:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewRegistrationToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.CommunicationPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.CommunicationPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.CommunicationPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.CommunicationPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEpoch();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getErrorMessage();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.admv2_remote.ErrorMessage.serializeBinaryToWriter
    );
  }
  f = message.getCreateVoiceCall();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.admv2_remote.CreateVoiceCall.serializeBinaryToWriter
    );
  }
  f = message.getJoinVoiceCall();
  if (f != null) {
    writer.writeMessage(
      50,
      f,
      proto.admv2_remote.JoinVoiceCall.serializeBinaryToWriter
    );
  }
  f = message.getLeaveVoiceCall();
  if (f != null) {
    writer.writeMessage(
      60,
      f,
      proto.admv2_remote.LeaveVoiceCall.serializeBinaryToWriter
    );
  }
  f = message.getStopVoiceCall();
  if (f != null) {
    writer.writeMessage(
      70,
      f,
      proto.admv2_remote.StopVoiceCall.serializeBinaryToWriter
    );
  }
  f = message.getStartBroadcast();
  if (f != null) {
    writer.writeMessage(
      80,
      f,
      proto.admv2_remote.StartBroadcast.serializeBinaryToWriter
    );
  }
  f = message.getEndBroadcast();
  if (f != null) {
    writer.writeMessage(
      90,
      f,
      proto.admv2_remote.EndBroadcast.serializeBinaryToWriter
    );
  }
  f = message.getGatherIceCandidate();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.admv2_remote.GatherIceCandidate.serializeBinaryToWriter
    );
  }
  f = message.getSendMessage();
  if (f != null) {
    writer.writeMessage(
      110,
      f,
      proto.admv2_remote.SendMessage.serializeBinaryToWriter
    );
  }
  f = message.getVoiceCallCreated();
  if (f != null) {
    writer.writeMessage(
      120,
      f,
      proto.admv2_remote.VoiceCallCreated.serializeBinaryToWriter
    );
  }
  f = message.getVoiceCallJoinAccepted();
  if (f != null) {
    writer.writeMessage(
      130,
      f,
      proto.admv2_remote.VoiceCallJoinAccepted.serializeBinaryToWriter
    );
  }
  f = message.getVoiceCallJoined();
  if (f != null) {
    writer.writeMessage(
      140,
      f,
      proto.admv2_remote.VoiceCallJoined.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 150));
  if (f != null) {
    writer.writeString(
      150,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 epoch = 10;
 * @return {number}
 */
proto.admv2_remote.CommunicationPayload.prototype.getEpoch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.setEpoch = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string channel_id = 20;
 * @return {string}
 */
proto.admv2_remote.CommunicationPayload.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional ErrorMessage error_message = 30;
 * @return {?proto.admv2_remote.ErrorMessage}
 */
proto.admv2_remote.CommunicationPayload.prototype.getErrorMessage = function() {
  return /** @type{?proto.admv2_remote.ErrorMessage} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.ErrorMessage, 30));
};


/**
 * @param {?proto.admv2_remote.ErrorMessage|undefined} value
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
*/
proto.admv2_remote.CommunicationPayload.prototype.setErrorMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 30, proto.admv2_remote.CommunicationPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.clearErrorMessage = function() {
  return this.setErrorMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.CommunicationPayload.prototype.hasErrorMessage = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional CreateVoiceCall create_voice_call = 40;
 * @return {?proto.admv2_remote.CreateVoiceCall}
 */
proto.admv2_remote.CommunicationPayload.prototype.getCreateVoiceCall = function() {
  return /** @type{?proto.admv2_remote.CreateVoiceCall} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.CreateVoiceCall, 40));
};


/**
 * @param {?proto.admv2_remote.CreateVoiceCall|undefined} value
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
*/
proto.admv2_remote.CommunicationPayload.prototype.setCreateVoiceCall = function(value) {
  return jspb.Message.setOneofWrapperField(this, 40, proto.admv2_remote.CommunicationPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.clearCreateVoiceCall = function() {
  return this.setCreateVoiceCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.CommunicationPayload.prototype.hasCreateVoiceCall = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional JoinVoiceCall join_voice_call = 50;
 * @return {?proto.admv2_remote.JoinVoiceCall}
 */
proto.admv2_remote.CommunicationPayload.prototype.getJoinVoiceCall = function() {
  return /** @type{?proto.admv2_remote.JoinVoiceCall} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.JoinVoiceCall, 50));
};


/**
 * @param {?proto.admv2_remote.JoinVoiceCall|undefined} value
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
*/
proto.admv2_remote.CommunicationPayload.prototype.setJoinVoiceCall = function(value) {
  return jspb.Message.setOneofWrapperField(this, 50, proto.admv2_remote.CommunicationPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.clearJoinVoiceCall = function() {
  return this.setJoinVoiceCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.CommunicationPayload.prototype.hasJoinVoiceCall = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * optional LeaveVoiceCall leave_voice_call = 60;
 * @return {?proto.admv2_remote.LeaveVoiceCall}
 */
proto.admv2_remote.CommunicationPayload.prototype.getLeaveVoiceCall = function() {
  return /** @type{?proto.admv2_remote.LeaveVoiceCall} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.LeaveVoiceCall, 60));
};


/**
 * @param {?proto.admv2_remote.LeaveVoiceCall|undefined} value
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
*/
proto.admv2_remote.CommunicationPayload.prototype.setLeaveVoiceCall = function(value) {
  return jspb.Message.setOneofWrapperField(this, 60, proto.admv2_remote.CommunicationPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.clearLeaveVoiceCall = function() {
  return this.setLeaveVoiceCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.CommunicationPayload.prototype.hasLeaveVoiceCall = function() {
  return jspb.Message.getField(this, 60) != null;
};


/**
 * optional StopVoiceCall stop_voice_call = 70;
 * @return {?proto.admv2_remote.StopVoiceCall}
 */
proto.admv2_remote.CommunicationPayload.prototype.getStopVoiceCall = function() {
  return /** @type{?proto.admv2_remote.StopVoiceCall} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.StopVoiceCall, 70));
};


/**
 * @param {?proto.admv2_remote.StopVoiceCall|undefined} value
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
*/
proto.admv2_remote.CommunicationPayload.prototype.setStopVoiceCall = function(value) {
  return jspb.Message.setOneofWrapperField(this, 70, proto.admv2_remote.CommunicationPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.clearStopVoiceCall = function() {
  return this.setStopVoiceCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.CommunicationPayload.prototype.hasStopVoiceCall = function() {
  return jspb.Message.getField(this, 70) != null;
};


/**
 * optional StartBroadcast start_broadcast = 80;
 * @return {?proto.admv2_remote.StartBroadcast}
 */
proto.admv2_remote.CommunicationPayload.prototype.getStartBroadcast = function() {
  return /** @type{?proto.admv2_remote.StartBroadcast} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.StartBroadcast, 80));
};


/**
 * @param {?proto.admv2_remote.StartBroadcast|undefined} value
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
*/
proto.admv2_remote.CommunicationPayload.prototype.setStartBroadcast = function(value) {
  return jspb.Message.setOneofWrapperField(this, 80, proto.admv2_remote.CommunicationPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.clearStartBroadcast = function() {
  return this.setStartBroadcast(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.CommunicationPayload.prototype.hasStartBroadcast = function() {
  return jspb.Message.getField(this, 80) != null;
};


/**
 * optional EndBroadcast end_broadcast = 90;
 * @return {?proto.admv2_remote.EndBroadcast}
 */
proto.admv2_remote.CommunicationPayload.prototype.getEndBroadcast = function() {
  return /** @type{?proto.admv2_remote.EndBroadcast} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.EndBroadcast, 90));
};


/**
 * @param {?proto.admv2_remote.EndBroadcast|undefined} value
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
*/
proto.admv2_remote.CommunicationPayload.prototype.setEndBroadcast = function(value) {
  return jspb.Message.setOneofWrapperField(this, 90, proto.admv2_remote.CommunicationPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.clearEndBroadcast = function() {
  return this.setEndBroadcast(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.CommunicationPayload.prototype.hasEndBroadcast = function() {
  return jspb.Message.getField(this, 90) != null;
};


/**
 * optional GatherIceCandidate gather_ice_candidate = 100;
 * @return {?proto.admv2_remote.GatherIceCandidate}
 */
proto.admv2_remote.CommunicationPayload.prototype.getGatherIceCandidate = function() {
  return /** @type{?proto.admv2_remote.GatherIceCandidate} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.GatherIceCandidate, 100));
};


/**
 * @param {?proto.admv2_remote.GatherIceCandidate|undefined} value
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
*/
proto.admv2_remote.CommunicationPayload.prototype.setGatherIceCandidate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 100, proto.admv2_remote.CommunicationPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.clearGatherIceCandidate = function() {
  return this.setGatherIceCandidate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.CommunicationPayload.prototype.hasGatherIceCandidate = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional SendMessage send_message = 110;
 * @return {?proto.admv2_remote.SendMessage}
 */
proto.admv2_remote.CommunicationPayload.prototype.getSendMessage = function() {
  return /** @type{?proto.admv2_remote.SendMessage} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.SendMessage, 110));
};


/**
 * @param {?proto.admv2_remote.SendMessage|undefined} value
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
*/
proto.admv2_remote.CommunicationPayload.prototype.setSendMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 110, proto.admv2_remote.CommunicationPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.clearSendMessage = function() {
  return this.setSendMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.CommunicationPayload.prototype.hasSendMessage = function() {
  return jspb.Message.getField(this, 110) != null;
};


/**
 * optional VoiceCallCreated voice_call_created = 120;
 * @return {?proto.admv2_remote.VoiceCallCreated}
 */
proto.admv2_remote.CommunicationPayload.prototype.getVoiceCallCreated = function() {
  return /** @type{?proto.admv2_remote.VoiceCallCreated} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.VoiceCallCreated, 120));
};


/**
 * @param {?proto.admv2_remote.VoiceCallCreated|undefined} value
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
*/
proto.admv2_remote.CommunicationPayload.prototype.setVoiceCallCreated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 120, proto.admv2_remote.CommunicationPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.clearVoiceCallCreated = function() {
  return this.setVoiceCallCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.CommunicationPayload.prototype.hasVoiceCallCreated = function() {
  return jspb.Message.getField(this, 120) != null;
};


/**
 * optional VoiceCallJoinAccepted voice_call_join_accepted = 130;
 * @return {?proto.admv2_remote.VoiceCallJoinAccepted}
 */
proto.admv2_remote.CommunicationPayload.prototype.getVoiceCallJoinAccepted = function() {
  return /** @type{?proto.admv2_remote.VoiceCallJoinAccepted} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.VoiceCallJoinAccepted, 130));
};


/**
 * @param {?proto.admv2_remote.VoiceCallJoinAccepted|undefined} value
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
*/
proto.admv2_remote.CommunicationPayload.prototype.setVoiceCallJoinAccepted = function(value) {
  return jspb.Message.setOneofWrapperField(this, 130, proto.admv2_remote.CommunicationPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.clearVoiceCallJoinAccepted = function() {
  return this.setVoiceCallJoinAccepted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.CommunicationPayload.prototype.hasVoiceCallJoinAccepted = function() {
  return jspb.Message.getField(this, 130) != null;
};


/**
 * optional VoiceCallJoined voice_call_joined = 140;
 * @return {?proto.admv2_remote.VoiceCallJoined}
 */
proto.admv2_remote.CommunicationPayload.prototype.getVoiceCallJoined = function() {
  return /** @type{?proto.admv2_remote.VoiceCallJoined} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.VoiceCallJoined, 140));
};


/**
 * @param {?proto.admv2_remote.VoiceCallJoined|undefined} value
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
*/
proto.admv2_remote.CommunicationPayload.prototype.setVoiceCallJoined = function(value) {
  return jspb.Message.setOneofWrapperField(this, 140, proto.admv2_remote.CommunicationPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.clearVoiceCallJoined = function() {
  return this.setVoiceCallJoined(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.CommunicationPayload.prototype.hasVoiceCallJoined = function() {
  return jspb.Message.getField(this, 140) != null;
};


/**
 * optional string new_registration_token = 150;
 * @return {string}
 */
proto.admv2_remote.CommunicationPayload.prototype.getNewRegistrationToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 150, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.setNewRegistrationToken = function(value) {
  return jspb.Message.setOneofField(this, 150, proto.admv2_remote.CommunicationPayload.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.clearNewRegistrationToken = function() {
  return jspb.Message.setOneofField(this, 150, proto.admv2_remote.CommunicationPayload.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.CommunicationPayload.prototype.hasNewRegistrationToken = function() {
  return jspb.Message.getField(this, 150) != null;
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.admv2_remote.CommunicationPayload.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.setUsername = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.admv2_remote.CommunicationPayload.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.admv2_remote.CommunicationPayload} returns this
 */
proto.admv2_remote.CommunicationPayload.prototype.clearUsername = function() {
  return jspb.Message.setOneofField(this, 2, proto.admv2_remote.CommunicationPayload.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.CommunicationPayload.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.admv2_remote.Content.oneofGroups_ = [[100]];

/**
 * @enum {number}
 */
proto.admv2_remote.Content.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  BYTES: 100
};

/**
 * @return {proto.admv2_remote.Content.PayloadCase}
 */
proto.admv2_remote.Content.prototype.getPayloadCase = function() {
  return /** @type {proto.admv2_remote.Content.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.admv2_remote.Content.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.Content.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.Content.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.Content} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.Content.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bytes: msg.getBytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.Content}
 */
proto.admv2_remote.Content.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.Content;
  return proto.admv2_remote.Content.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.Content} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.Content}
 */
proto.admv2_remote.Content.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.admv2_remote.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 100:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.Content.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.Content.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.Content} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.Content.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 100));
  if (f != null) {
    writer.writeBytes(
      100,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.admv2_remote.Content.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.admv2_remote.Content} returns this
 */
proto.admv2_remote.Content.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Type type = 2;
 * @return {!proto.admv2_remote.Type}
 */
proto.admv2_remote.Content.prototype.getType = function() {
  return /** @type {!proto.admv2_remote.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.admv2_remote.Type} value
 * @return {!proto.admv2_remote.Content} returns this
 */
proto.admv2_remote.Content.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bytes bytes = 100;
 * @return {!(string|Uint8Array)}
 */
proto.admv2_remote.Content.prototype.getBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 100, ""));
};


/**
 * optional bytes bytes = 100;
 * This is a type-conversion wrapper around `getBytes()`
 * @return {string}
 */
proto.admv2_remote.Content.prototype.getBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytes()));
};


/**
 * optional bytes bytes = 100;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytes()`
 * @return {!Uint8Array}
 */
proto.admv2_remote.Content.prototype.getBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.admv2_remote.Content} returns this
 */
proto.admv2_remote.Content.prototype.setBytes = function(value) {
  return jspb.Message.setOneofField(this, 100, proto.admv2_remote.Content.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.admv2_remote.Content} returns this
 */
proto.admv2_remote.Content.prototype.clearBytes = function() {
  return jspb.Message.setOneofField(this, 100, proto.admv2_remote.Content.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.Content.prototype.hasBytes = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.UsherMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.UsherMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.UsherMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.UsherMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: (f = msg.getContent()) && proto.admv2_remote.Content.toObject(includeInstance, f),
    signature: msg.getSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.UsherMessage}
 */
proto.admv2_remote.UsherMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.UsherMessage;
  return proto.admv2_remote.UsherMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.UsherMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.UsherMessage}
 */
proto.admv2_remote.UsherMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = new proto.admv2_remote.Content;
      reader.readMessage(value,proto.admv2_remote.Content.deserializeBinaryFromReader);
      msg.setContent(value);
      break;
    case 20:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.UsherMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.UsherMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.UsherMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.UsherMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.admv2_remote.Content.serializeBinaryToWriter
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      20,
      f
    );
  }
};


/**
 * optional Content content = 10;
 * @return {?proto.admv2_remote.Content}
 */
proto.admv2_remote.UsherMessage.prototype.getContent = function() {
  return /** @type{?proto.admv2_remote.Content} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.Content, 10));
};


/**
 * @param {?proto.admv2_remote.Content|undefined} value
 * @return {!proto.admv2_remote.UsherMessage} returns this
*/
proto.admv2_remote.UsherMessage.prototype.setContent = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.UsherMessage} returns this
 */
proto.admv2_remote.UsherMessage.prototype.clearContent = function() {
  return this.setContent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.UsherMessage.prototype.hasContent = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bytes signature = 20;
 * @return {!(string|Uint8Array)}
 */
proto.admv2_remote.UsherMessage.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * optional bytes signature = 20;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.admv2_remote.UsherMessage.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 20;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.admv2_remote.UsherMessage.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.admv2_remote.UsherMessage} returns this
 */
proto.admv2_remote.UsherMessage.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 20, value);
};


/**
 * @enum {number}
 */
proto.admv2_remote.ErrorCode = {
  ERROR_CODE_NOT_SET: 0,
  CHANNEL_NOT_FOUND: 10,
  CHANNEL_IS_EXISTING: 20
};

/**
 * @enum {number}
 */
proto.admv2_remote.ChannelOperation = {
  OPERATION_NOT_SET: 0,
  JOIN: 10,
  LEAVE: 20,
  ARCHIVE: 30,
  DELETE: 40,
  CREATE: 50
};

/**
 * @enum {number}
 */
proto.admv2_remote.SdpType = {
  SDP_TYPE_NOT_SET: 0,
  OFFER: 10,
  ANSWER: 20
};

/**
 * @enum {number}
 */
proto.admv2_remote.ChatMessageType = {
  MESSAGE_TYPE_NOTSET: 0,
  TEXT: 10,
  IMAGE: 20,
  VIDEO: 30,
  VOICE: 40,
  FILE: 50
};

/**
 * @enum {number}
 */
proto.admv2_remote.Type = {
  MESSAGE: 0,
  ACK_RECEIVED: 200,
  ACK_UNPROCESSABLE: 500,
  ACK_ERROR: 501
};

goog.object.extend(exports, proto.admv2_remote);
