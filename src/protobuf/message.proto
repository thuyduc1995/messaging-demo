syntax = "proto3";

package admv2_remote;
option go_package="golang/admv2/bifrost";
option java_package="com.axon.proto";

/// Enums

enum ErrorCode {
    ERROR_CODE_NOT_SET = 0;
    ERROR_CODE_CHANNEL_NOT_FOUND = 10;
    ERROR_CODE_CHANNEL_IS_EXISTING = 20;
}

enum SdpType {
    SDP_TYPE_NOT_SET = 0;
    SDP_TYPE_OFFER = 10;
    SDP_TYPE_ANSWER = 20;
}

enum ChannelCommand {
    CHANNEL_COMMAND_NOT_SET = 0;
    CHANNEL_COMMAND_JOIN = 10;
    CHANNEL_COMMAND_CREATE = 20;
    CHANNEL_COMMAND_LEAVE = 30;
    CHANNEL_COMMAND_ARCHIVE = 40;
}

enum MessageType {
    MESSAGE_TYPE_NOT_SET = 0;
    MESSAGE_TYPE_TEXT = 10;
    MESSAGE_TYPE_IMAGE = 20;
    MESSAGE_TYPE_VIDEO = 30;
    MESSAGE_TYPE_VOICE = 40;
    MESSAGE_TYPE_FILE = 50;
}

enum CallType {
    CALL_TYPE_NOT_SET = 0;
    CALL_TYPE_VOICE = 1;
    CALL_TYPE_VIDEO = 2;
}

enum ResponseType {
    RESPONSE_TYPE_NOT_SET = 0;
    RESPONSE_TYPE_SUCCESS = 1;
    RESPONSE_TYPE_ERROR = 2;
}

/// Data model

message ClientInfo {
    string client_id = 10;
    string client_alias = 20;
}

message Jsep {
    string sdp = 10;
    SdpType type = 20;
}

message IceCandidate {
    string candidate = 10;
    int32 sdp_mline_index = 20;
    string sdp_mid = 30;
}

message Error {
    ErrorCode code = 10;
    string message = 20;
    string reason = 30;
}

/// Commands: request server what to do

message SendMessageRequest {
    MessageType type = 10;
    string content = 20;
}

message StartCallRequest {
    bool muted = 10;
    CallType call_type = 20;
}

message JoinCallRequest {
    bool muted = 10;
    string call_id = 20;
    CallType call_type = 30;
    Jsep sdp_offer = 40;
}

message LeaveCallRequest {
    string call_id = 20;
}

message StopCallRequest {
    string call_id = 20;
}

message StartBroadcastRequest {
    string call_id = 20;
}

message EndBroadcastRequest {
    string call_id = 20;
}

message GatherIceCandidateRequest {
    repeated IceCandidate candidates = 10;
}

message UpsertRegistrationTokenRequest {
    string device_registration_token = 10;
}

message ExecuteChannelCommandRequest {
    ChannelCommand command = 10;
}

message JoinChannelRequest {
    string client_alias = 10;
}

/// Response : response of request

message StartCallResponse {
    ResponseType result = 10;
    string call_id = 20;
    Error error = 30;
}

message JoinCallResponse {
    ResponseType result = 5;
    string call_id = 10;
    string transaction = 20;
    repeated string current_participants = 30;
    Jsep sdp_answer = 40;
    Error error = 50;
}

message JoinChannelResponse {
    ResponseType result = 10;
    ClientInfo participant = 20;
    repeated ClientInfo current_participants = 40;
    Error error = 50;
}

/// Events happens after request is handled successfully

message CallStartedEvent {
    string call_id = 10;
    CallType call_type = 20;
}

message CallJoinedEvent {
    string call_id = 10;
    string new_participant = 20;
}

message CallLeftEvent {
    string call_id = 10;
    string participant = 20;
}

message CallStoppedEvent {
    string call_id = 10;
}

message ChannelJoinedEvent {
    ClientInfo client_info = 10;
}

message ChannelCreatedEvent {
}

message ChannelLeftEvent {
}

message ChannelArchivedEvent {
}

message MessageSentEvent {
    MessageType type = 10;
    string content = 20;
    string sender = 30;
}


/// Message envelope

message MessagingCommandPayload {
    int64 epoch = 10;
    string channel_id = 20;
    oneof Field {
        StartCallRequest start_call = 30;
        JoinCallRequest join_call = 40;
        LeaveCallRequest leave_call = 50;
        StopCallRequest stop_call = 60;
        StartBroadcastRequest start_broadcast = 70;
        EndBroadcastRequest end_broadcast = 80;
        GatherIceCandidateRequest gather_ice_candidate = 90;
        SendMessageRequest send_message = 100;
        UpsertRegistrationTokenRequest upsert_registration_token = 110;
        ExecuteChannelCommandRequest exec_channel_command = 120;
        JoinChannelRequest join_channel = 130;
    }
}

message MessagingResponsePayload {
    int64 epoch = 10;
    string channel_id = 20;
    oneof Field {
        StartCallResponse start_call_response = 30;
        JoinCallResponse join_call_response = 40;
        JoinChannelResponse join_channel_response = 50;
    }
}

message MessagingEventPayload {
    int64 epoch = 10;
    string channel_id = 20;
    oneof Field {
        CallStartedEvent call_started = 40;
        CallJoinedEvent call_joined = 50;
        CallLeftEvent call_left = 60;
        CallStoppedEvent call_stopped = 70;
        ChannelJoinedEvent channel_joined = 80;
        ChannelCreatedEvent channel_created = 90;
        ChannelLeftEvent channel_left = 100;
        ChannelArchivedEvent channel_archived = 110;
        MessageSentEvent message_sent = 120;
    }
}

enum Type {
    MESSAGE = 0;
    ACK_RECEIVED = 200;
    ACK_UNPROCESSABLE = 500;
    ACK_ERROR = 501;
}

/// RPC ///////////////////////////////////////////////////////////////////////////

message Content {
    int64 id = 1;
    Type type = 2;
    oneof payload {
        bytes bytes = 100;
    }
}

message Message {
    Content content = 10;
    bytes signature = 20;
}