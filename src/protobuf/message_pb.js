// source: message.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.admv2_remote.CallJoinedEvent', null, global);
goog.exportSymbol('proto.admv2_remote.CallLeftEvent', null, global);
goog.exportSymbol('proto.admv2_remote.CallStartedEvent', null, global);
goog.exportSymbol('proto.admv2_remote.CallStoppedEvent', null, global);
goog.exportSymbol('proto.admv2_remote.CallType', null, global);
goog.exportSymbol('proto.admv2_remote.ChannelArchivedEvent', null, global);
goog.exportSymbol('proto.admv2_remote.ChannelCommand', null, global);
goog.exportSymbol('proto.admv2_remote.ChannelCreatedEvent', null, global);
goog.exportSymbol('proto.admv2_remote.ChannelJoinedEvent', null, global);
goog.exportSymbol('proto.admv2_remote.ChannelLeftEvent', null, global);
goog.exportSymbol('proto.admv2_remote.Content', null, global);
goog.exportSymbol('proto.admv2_remote.Content.PayloadCase', null, global);
goog.exportSymbol('proto.admv2_remote.EndBroadcastRequest', null, global);
goog.exportSymbol('proto.admv2_remote.Error', null, global);
goog.exportSymbol('proto.admv2_remote.ErrorCode', null, global);
goog.exportSymbol('proto.admv2_remote.ExecuteChannelCommandRequest', null, global);
goog.exportSymbol('proto.admv2_remote.GatherIceCandidateRequest', null, global);
goog.exportSymbol('proto.admv2_remote.IceCandidate', null, global);
goog.exportSymbol('proto.admv2_remote.JoinCallRequest', null, global);
goog.exportSymbol('proto.admv2_remote.JoinCallResponse', null, global);
goog.exportSymbol('proto.admv2_remote.Jsep', null, global);
goog.exportSymbol('proto.admv2_remote.LeaveCallRequest', null, global);
goog.exportSymbol('proto.admv2_remote.Message', null, global);
goog.exportSymbol('proto.admv2_remote.MessageSentEvent', null, global);
goog.exportSymbol('proto.admv2_remote.MessageType', null, global);
goog.exportSymbol('proto.admv2_remote.MessagingCommandPayload', null, global);
goog.exportSymbol('proto.admv2_remote.MessagingCommandPayload.FieldCase', null, global);
goog.exportSymbol('proto.admv2_remote.MessagingEventPayload', null, global);
goog.exportSymbol('proto.admv2_remote.MessagingEventPayload.FieldCase', null, global);
goog.exportSymbol('proto.admv2_remote.MessagingResponsePayload', null, global);
goog.exportSymbol('proto.admv2_remote.MessagingResponsePayload.FieldCase', null, global);
goog.exportSymbol('proto.admv2_remote.SdpType', null, global);
goog.exportSymbol('proto.admv2_remote.SendMessageRequest', null, global);
goog.exportSymbol('proto.admv2_remote.StartBroadcastRequest', null, global);
goog.exportSymbol('proto.admv2_remote.StartCallRequest', null, global);
goog.exportSymbol('proto.admv2_remote.StartCallResponse', null, global);
goog.exportSymbol('proto.admv2_remote.StopCallRequest', null, global);
goog.exportSymbol('proto.admv2_remote.Type', null, global);
goog.exportSymbol('proto.admv2_remote.UpsertRegistrationTokenRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.Jsep = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.Jsep, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.Jsep.displayName = 'proto.admv2_remote.Jsep';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.IceCandidate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.IceCandidate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.IceCandidate.displayName = 'proto.admv2_remote.IceCandidate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.Error.displayName = 'proto.admv2_remote.Error';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.SendMessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.SendMessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.SendMessageRequest.displayName = 'proto.admv2_remote.SendMessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.StartCallRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.StartCallRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.StartCallRequest.displayName = 'proto.admv2_remote.StartCallRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.JoinCallRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.JoinCallRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.JoinCallRequest.displayName = 'proto.admv2_remote.JoinCallRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.LeaveCallRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.LeaveCallRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.LeaveCallRequest.displayName = 'proto.admv2_remote.LeaveCallRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.StopCallRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.StopCallRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.StopCallRequest.displayName = 'proto.admv2_remote.StopCallRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.StartBroadcastRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.StartBroadcastRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.StartBroadcastRequest.displayName = 'proto.admv2_remote.StartBroadcastRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.EndBroadcastRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.EndBroadcastRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.EndBroadcastRequest.displayName = 'proto.admv2_remote.EndBroadcastRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.GatherIceCandidateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.admv2_remote.GatherIceCandidateRequest.repeatedFields_, null);
};
goog.inherits(proto.admv2_remote.GatherIceCandidateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.GatherIceCandidateRequest.displayName = 'proto.admv2_remote.GatherIceCandidateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.UpsertRegistrationTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.UpsertRegistrationTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.UpsertRegistrationTokenRequest.displayName = 'proto.admv2_remote.UpsertRegistrationTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.ExecuteChannelCommandRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.ExecuteChannelCommandRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.ExecuteChannelCommandRequest.displayName = 'proto.admv2_remote.ExecuteChannelCommandRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.StartCallResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.StartCallResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.StartCallResponse.displayName = 'proto.admv2_remote.StartCallResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.JoinCallResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.admv2_remote.JoinCallResponse.repeatedFields_, null);
};
goog.inherits(proto.admv2_remote.JoinCallResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.JoinCallResponse.displayName = 'proto.admv2_remote.JoinCallResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.CallStartedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.CallStartedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.CallStartedEvent.displayName = 'proto.admv2_remote.CallStartedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.CallJoinedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.CallJoinedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.CallJoinedEvent.displayName = 'proto.admv2_remote.CallJoinedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.CallLeftEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.CallLeftEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.CallLeftEvent.displayName = 'proto.admv2_remote.CallLeftEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.CallStoppedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.CallStoppedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.CallStoppedEvent.displayName = 'proto.admv2_remote.CallStoppedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.ChannelJoinedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.ChannelJoinedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.ChannelJoinedEvent.displayName = 'proto.admv2_remote.ChannelJoinedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.ChannelCreatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.ChannelCreatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.ChannelCreatedEvent.displayName = 'proto.admv2_remote.ChannelCreatedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.ChannelLeftEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.ChannelLeftEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.ChannelLeftEvent.displayName = 'proto.admv2_remote.ChannelLeftEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.ChannelArchivedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.ChannelArchivedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.ChannelArchivedEvent.displayName = 'proto.admv2_remote.ChannelArchivedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.MessageSentEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.MessageSentEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.MessageSentEvent.displayName = 'proto.admv2_remote.MessageSentEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.MessagingCommandPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.admv2_remote.MessagingCommandPayload.oneofGroups_);
};
goog.inherits(proto.admv2_remote.MessagingCommandPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.MessagingCommandPayload.displayName = 'proto.admv2_remote.MessagingCommandPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.MessagingResponsePayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.admv2_remote.MessagingResponsePayload.oneofGroups_);
};
goog.inherits(proto.admv2_remote.MessagingResponsePayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.MessagingResponsePayload.displayName = 'proto.admv2_remote.MessagingResponsePayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.MessagingEventPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.admv2_remote.MessagingEventPayload.oneofGroups_);
};
goog.inherits(proto.admv2_remote.MessagingEventPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.MessagingEventPayload.displayName = 'proto.admv2_remote.MessagingEventPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.Content = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.admv2_remote.Content.oneofGroups_);
};
goog.inherits(proto.admv2_remote.Content, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.Content.displayName = 'proto.admv2_remote.Content';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admv2_remote.Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admv2_remote.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admv2_remote.Message.displayName = 'proto.admv2_remote.Message';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.Jsep.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.Jsep.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.Jsep} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.Jsep.toObject = function(includeInstance, msg) {
  var f, obj = {
    sdp: jspb.Message.getFieldWithDefault(msg, 10, ""),
    type: jspb.Message.getFieldWithDefault(msg, 20, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.Jsep}
 */
proto.admv2_remote.Jsep.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.Jsep;
  return proto.admv2_remote.Jsep.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.Jsep} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.Jsep}
 */
proto.admv2_remote.Jsep.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSdp(value);
      break;
    case 20:
      var value = /** @type {!proto.admv2_remote.SdpType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.Jsep.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.Jsep.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.Jsep} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.Jsep.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSdp();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      20,
      f
    );
  }
};


/**
 * optional string sdp = 10;
 * @return {string}
 */
proto.admv2_remote.Jsep.prototype.getSdp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.Jsep} returns this
 */
proto.admv2_remote.Jsep.prototype.setSdp = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional SdpType type = 20;
 * @return {!proto.admv2_remote.SdpType}
 */
proto.admv2_remote.Jsep.prototype.getType = function() {
  return /** @type {!proto.admv2_remote.SdpType} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {!proto.admv2_remote.SdpType} value
 * @return {!proto.admv2_remote.Jsep} returns this
 */
proto.admv2_remote.Jsep.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.IceCandidate.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.IceCandidate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.IceCandidate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.IceCandidate.toObject = function(includeInstance, msg) {
  var f, obj = {
    candidate: jspb.Message.getFieldWithDefault(msg, 10, ""),
    sdpMlineIndex: jspb.Message.getFieldWithDefault(msg, 20, 0),
    sdpMid: jspb.Message.getFieldWithDefault(msg, 30, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.IceCandidate}
 */
proto.admv2_remote.IceCandidate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.IceCandidate;
  return proto.admv2_remote.IceCandidate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.IceCandidate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.IceCandidate}
 */
proto.admv2_remote.IceCandidate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCandidate(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSdpMlineIndex(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setSdpMid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.IceCandidate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.IceCandidate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.IceCandidate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.IceCandidate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandidate();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSdpMlineIndex();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getSdpMid();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
};


/**
 * optional string candidate = 10;
 * @return {string}
 */
proto.admv2_remote.IceCandidate.prototype.getCandidate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.IceCandidate} returns this
 */
proto.admv2_remote.IceCandidate.prototype.setCandidate = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 sdp_mline_index = 20;
 * @return {number}
 */
proto.admv2_remote.IceCandidate.prototype.getSdpMlineIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.admv2_remote.IceCandidate} returns this
 */
proto.admv2_remote.IceCandidate.prototype.setSdpMlineIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional string sdp_mid = 30;
 * @return {string}
 */
proto.admv2_remote.IceCandidate.prototype.getSdpMid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.IceCandidate} returns this
 */
proto.admv2_remote.IceCandidate.prototype.setSdpMid = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 10, 0),
    message: jspb.Message.getFieldWithDefault(msg, 20, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 30, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.Error}
 */
proto.admv2_remote.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.Error;
  return proto.admv2_remote.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.Error}
 */
proto.admv2_remote.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {!proto.admv2_remote.ErrorCode} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
};


/**
 * optional ErrorCode code = 10;
 * @return {!proto.admv2_remote.ErrorCode}
 */
proto.admv2_remote.Error.prototype.getCode = function() {
  return /** @type {!proto.admv2_remote.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.admv2_remote.ErrorCode} value
 * @return {!proto.admv2_remote.Error} returns this
 */
proto.admv2_remote.Error.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional string message = 20;
 * @return {string}
 */
proto.admv2_remote.Error.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.Error} returns this
 */
proto.admv2_remote.Error.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string reason = 30;
 * @return {string}
 */
proto.admv2_remote.Error.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.Error} returns this
 */
proto.admv2_remote.Error.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.SendMessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.SendMessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.SendMessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.SendMessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 10, 0),
    content: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.SendMessageRequest}
 */
proto.admv2_remote.SendMessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.SendMessageRequest;
  return proto.admv2_remote.SendMessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.SendMessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.SendMessageRequest}
 */
proto.admv2_remote.SendMessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {!proto.admv2_remote.MessageType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.SendMessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.SendMessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.SendMessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.SendMessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional MessageType type = 10;
 * @return {!proto.admv2_remote.MessageType}
 */
proto.admv2_remote.SendMessageRequest.prototype.getType = function() {
  return /** @type {!proto.admv2_remote.MessageType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.admv2_remote.MessageType} value
 * @return {!proto.admv2_remote.SendMessageRequest} returns this
 */
proto.admv2_remote.SendMessageRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional string content = 20;
 * @return {string}
 */
proto.admv2_remote.SendMessageRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.SendMessageRequest} returns this
 */
proto.admv2_remote.SendMessageRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.StartCallRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.StartCallRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.StartCallRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.StartCallRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    muted: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    callType: jspb.Message.getFieldWithDefault(msg, 20, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.StartCallRequest}
 */
proto.admv2_remote.StartCallRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.StartCallRequest;
  return proto.admv2_remote.StartCallRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.StartCallRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.StartCallRequest}
 */
proto.admv2_remote.StartCallRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMuted(value);
      break;
    case 20:
      var value = /** @type {!proto.admv2_remote.CallType} */ (reader.readEnum());
      msg.setCallType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.StartCallRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.StartCallRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.StartCallRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.StartCallRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMuted();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getCallType();
  if (f !== 0.0) {
    writer.writeEnum(
      20,
      f
    );
  }
};


/**
 * optional bool muted = 10;
 * @return {boolean}
 */
proto.admv2_remote.StartCallRequest.prototype.getMuted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.admv2_remote.StartCallRequest} returns this
 */
proto.admv2_remote.StartCallRequest.prototype.setMuted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional CallType call_type = 20;
 * @return {!proto.admv2_remote.CallType}
 */
proto.admv2_remote.StartCallRequest.prototype.getCallType = function() {
  return /** @type {!proto.admv2_remote.CallType} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {!proto.admv2_remote.CallType} value
 * @return {!proto.admv2_remote.StartCallRequest} returns this
 */
proto.admv2_remote.StartCallRequest.prototype.setCallType = function(value) {
  return jspb.Message.setProto3EnumField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.JoinCallRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.JoinCallRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.JoinCallRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.JoinCallRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    muted: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    callId: jspb.Message.getFieldWithDefault(msg, 20, ""),
    callType: jspb.Message.getFieldWithDefault(msg, 30, 0),
    sdpOffer: (f = msg.getSdpOffer()) && proto.admv2_remote.Jsep.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.JoinCallRequest}
 */
proto.admv2_remote.JoinCallRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.JoinCallRequest;
  return proto.admv2_remote.JoinCallRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.JoinCallRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.JoinCallRequest}
 */
proto.admv2_remote.JoinCallRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMuted(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallId(value);
      break;
    case 30:
      var value = /** @type {!proto.admv2_remote.CallType} */ (reader.readEnum());
      msg.setCallType(value);
      break;
    case 40:
      var value = new proto.admv2_remote.Jsep;
      reader.readMessage(value,proto.admv2_remote.Jsep.deserializeBinaryFromReader);
      msg.setSdpOffer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.JoinCallRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.JoinCallRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.JoinCallRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.JoinCallRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMuted();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getCallId();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getCallType();
  if (f !== 0.0) {
    writer.writeEnum(
      30,
      f
    );
  }
  f = message.getSdpOffer();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.admv2_remote.Jsep.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool muted = 10;
 * @return {boolean}
 */
proto.admv2_remote.JoinCallRequest.prototype.getMuted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.admv2_remote.JoinCallRequest} returns this
 */
proto.admv2_remote.JoinCallRequest.prototype.setMuted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string call_id = 20;
 * @return {string}
 */
proto.admv2_remote.JoinCallRequest.prototype.getCallId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.JoinCallRequest} returns this
 */
proto.admv2_remote.JoinCallRequest.prototype.setCallId = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional CallType call_type = 30;
 * @return {!proto.admv2_remote.CallType}
 */
proto.admv2_remote.JoinCallRequest.prototype.getCallType = function() {
  return /** @type {!proto.admv2_remote.CallType} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {!proto.admv2_remote.CallType} value
 * @return {!proto.admv2_remote.JoinCallRequest} returns this
 */
proto.admv2_remote.JoinCallRequest.prototype.setCallType = function(value) {
  return jspb.Message.setProto3EnumField(this, 30, value);
};


/**
 * optional Jsep sdp_offer = 40;
 * @return {?proto.admv2_remote.Jsep}
 */
proto.admv2_remote.JoinCallRequest.prototype.getSdpOffer = function() {
  return /** @type{?proto.admv2_remote.Jsep} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.Jsep, 40));
};


/**
 * @param {?proto.admv2_remote.Jsep|undefined} value
 * @return {!proto.admv2_remote.JoinCallRequest} returns this
*/
proto.admv2_remote.JoinCallRequest.prototype.setSdpOffer = function(value) {
  return jspb.Message.setWrapperField(this, 40, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.JoinCallRequest} returns this
 */
proto.admv2_remote.JoinCallRequest.prototype.clearSdpOffer = function() {
  return this.setSdpOffer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.JoinCallRequest.prototype.hasSdpOffer = function() {
  return jspb.Message.getField(this, 40) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.LeaveCallRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.LeaveCallRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.LeaveCallRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.LeaveCallRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    callId: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.LeaveCallRequest}
 */
proto.admv2_remote.LeaveCallRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.LeaveCallRequest;
  return proto.admv2_remote.LeaveCallRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.LeaveCallRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.LeaveCallRequest}
 */
proto.admv2_remote.LeaveCallRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.LeaveCallRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.LeaveCallRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.LeaveCallRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.LeaveCallRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallId();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional string call_id = 20;
 * @return {string}
 */
proto.admv2_remote.LeaveCallRequest.prototype.getCallId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.LeaveCallRequest} returns this
 */
proto.admv2_remote.LeaveCallRequest.prototype.setCallId = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.StopCallRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.StopCallRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.StopCallRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.StopCallRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    callId: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.StopCallRequest}
 */
proto.admv2_remote.StopCallRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.StopCallRequest;
  return proto.admv2_remote.StopCallRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.StopCallRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.StopCallRequest}
 */
proto.admv2_remote.StopCallRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.StopCallRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.StopCallRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.StopCallRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.StopCallRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallId();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional string call_id = 20;
 * @return {string}
 */
proto.admv2_remote.StopCallRequest.prototype.getCallId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.StopCallRequest} returns this
 */
proto.admv2_remote.StopCallRequest.prototype.setCallId = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.StartBroadcastRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.StartBroadcastRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.StartBroadcastRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.StartBroadcastRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    callId: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.StartBroadcastRequest}
 */
proto.admv2_remote.StartBroadcastRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.StartBroadcastRequest;
  return proto.admv2_remote.StartBroadcastRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.StartBroadcastRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.StartBroadcastRequest}
 */
proto.admv2_remote.StartBroadcastRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.StartBroadcastRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.StartBroadcastRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.StartBroadcastRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.StartBroadcastRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallId();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional string call_id = 20;
 * @return {string}
 */
proto.admv2_remote.StartBroadcastRequest.prototype.getCallId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.StartBroadcastRequest} returns this
 */
proto.admv2_remote.StartBroadcastRequest.prototype.setCallId = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.EndBroadcastRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.EndBroadcastRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.EndBroadcastRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.EndBroadcastRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    callId: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.EndBroadcastRequest}
 */
proto.admv2_remote.EndBroadcastRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.EndBroadcastRequest;
  return proto.admv2_remote.EndBroadcastRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.EndBroadcastRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.EndBroadcastRequest}
 */
proto.admv2_remote.EndBroadcastRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.EndBroadcastRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.EndBroadcastRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.EndBroadcastRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.EndBroadcastRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallId();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional string call_id = 20;
 * @return {string}
 */
proto.admv2_remote.EndBroadcastRequest.prototype.getCallId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.EndBroadcastRequest} returns this
 */
proto.admv2_remote.EndBroadcastRequest.prototype.setCallId = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.admv2_remote.GatherIceCandidateRequest.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.GatherIceCandidateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.GatherIceCandidateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.GatherIceCandidateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.GatherIceCandidateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    candidatesList: jspb.Message.toObjectList(msg.getCandidatesList(),
    proto.admv2_remote.IceCandidate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.GatherIceCandidateRequest}
 */
proto.admv2_remote.GatherIceCandidateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.GatherIceCandidateRequest;
  return proto.admv2_remote.GatherIceCandidateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.GatherIceCandidateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.GatherIceCandidateRequest}
 */
proto.admv2_remote.GatherIceCandidateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = new proto.admv2_remote.IceCandidate;
      reader.readMessage(value,proto.admv2_remote.IceCandidate.deserializeBinaryFromReader);
      msg.addCandidates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.GatherIceCandidateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.GatherIceCandidateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.GatherIceCandidateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.GatherIceCandidateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandidatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.admv2_remote.IceCandidate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated IceCandidate candidates = 10;
 * @return {!Array<!proto.admv2_remote.IceCandidate>}
 */
proto.admv2_remote.GatherIceCandidateRequest.prototype.getCandidatesList = function() {
  return /** @type{!Array<!proto.admv2_remote.IceCandidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.admv2_remote.IceCandidate, 10));
};


/**
 * @param {!Array<!proto.admv2_remote.IceCandidate>} value
 * @return {!proto.admv2_remote.GatherIceCandidateRequest} returns this
*/
proto.admv2_remote.GatherIceCandidateRequest.prototype.setCandidatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.admv2_remote.IceCandidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.admv2_remote.IceCandidate}
 */
proto.admv2_remote.GatherIceCandidateRequest.prototype.addCandidates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.admv2_remote.IceCandidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.admv2_remote.GatherIceCandidateRequest} returns this
 */
proto.admv2_remote.GatherIceCandidateRequest.prototype.clearCandidatesList = function() {
  return this.setCandidatesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.UpsertRegistrationTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.UpsertRegistrationTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.UpsertRegistrationTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.UpsertRegistrationTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceRegistrationToken: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.UpsertRegistrationTokenRequest}
 */
proto.admv2_remote.UpsertRegistrationTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.UpsertRegistrationTokenRequest;
  return proto.admv2_remote.UpsertRegistrationTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.UpsertRegistrationTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.UpsertRegistrationTokenRequest}
 */
proto.admv2_remote.UpsertRegistrationTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceRegistrationToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.UpsertRegistrationTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.UpsertRegistrationTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.UpsertRegistrationTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.UpsertRegistrationTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceRegistrationToken();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string device_registration_token = 10;
 * @return {string}
 */
proto.admv2_remote.UpsertRegistrationTokenRequest.prototype.getDeviceRegistrationToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.UpsertRegistrationTokenRequest} returns this
 */
proto.admv2_remote.UpsertRegistrationTokenRequest.prototype.setDeviceRegistrationToken = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.ExecuteChannelCommandRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.ExecuteChannelCommandRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.ExecuteChannelCommandRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.ExecuteChannelCommandRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    command: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.ExecuteChannelCommandRequest}
 */
proto.admv2_remote.ExecuteChannelCommandRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.ExecuteChannelCommandRequest;
  return proto.admv2_remote.ExecuteChannelCommandRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.ExecuteChannelCommandRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.ExecuteChannelCommandRequest}
 */
proto.admv2_remote.ExecuteChannelCommandRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {!proto.admv2_remote.ChannelCommand} */ (reader.readEnum());
      msg.setCommand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.ExecuteChannelCommandRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.ExecuteChannelCommandRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.ExecuteChannelCommandRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.ExecuteChannelCommandRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommand();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
};


/**
 * optional ChannelCommand command = 10;
 * @return {!proto.admv2_remote.ChannelCommand}
 */
proto.admv2_remote.ExecuteChannelCommandRequest.prototype.getCommand = function() {
  return /** @type {!proto.admv2_remote.ChannelCommand} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.admv2_remote.ChannelCommand} value
 * @return {!proto.admv2_remote.ExecuteChannelCommandRequest} returns this
 */
proto.admv2_remote.ExecuteChannelCommandRequest.prototype.setCommand = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.StartCallResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.StartCallResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.StartCallResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.StartCallResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    callId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    error: (f = msg.getError()) && proto.admv2_remote.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.StartCallResponse}
 */
proto.admv2_remote.StartCallResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.StartCallResponse;
  return proto.admv2_remote.StartCallResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.StartCallResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.StartCallResponse}
 */
proto.admv2_remote.StartCallResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallId(value);
      break;
    case 30:
      var value = new proto.admv2_remote.Error;
      reader.readMessage(value,proto.admv2_remote.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.StartCallResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.StartCallResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.StartCallResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.StartCallResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.admv2_remote.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string call_id = 10;
 * @return {string}
 */
proto.admv2_remote.StartCallResponse.prototype.getCallId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.StartCallResponse} returns this
 */
proto.admv2_remote.StartCallResponse.prototype.setCallId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional Error error = 30;
 * @return {?proto.admv2_remote.Error}
 */
proto.admv2_remote.StartCallResponse.prototype.getError = function() {
  return /** @type{?proto.admv2_remote.Error} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.Error, 30));
};


/**
 * @param {?proto.admv2_remote.Error|undefined} value
 * @return {!proto.admv2_remote.StartCallResponse} returns this
*/
proto.admv2_remote.StartCallResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.StartCallResponse} returns this
 */
proto.admv2_remote.StartCallResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.StartCallResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 30) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.admv2_remote.JoinCallResponse.repeatedFields_ = [30];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.JoinCallResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.JoinCallResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.JoinCallResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.JoinCallResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    callId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    transaction: jspb.Message.getFieldWithDefault(msg, 20, ""),
    currentParticipantsList: (f = jspb.Message.getRepeatedField(msg, 30)) == null ? undefined : f,
    sdpAnswer: (f = msg.getSdpAnswer()) && proto.admv2_remote.Jsep.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.admv2_remote.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.JoinCallResponse}
 */
proto.admv2_remote.JoinCallResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.JoinCallResponse;
  return proto.admv2_remote.JoinCallResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.JoinCallResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.JoinCallResponse}
 */
proto.admv2_remote.JoinCallResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallId(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransaction(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.addCurrentParticipants(value);
      break;
    case 40:
      var value = new proto.admv2_remote.Jsep;
      reader.readMessage(value,proto.admv2_remote.Jsep.deserializeBinaryFromReader);
      msg.setSdpAnswer(value);
      break;
    case 50:
      var value = new proto.admv2_remote.Error;
      reader.readMessage(value,proto.admv2_remote.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.JoinCallResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.JoinCallResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.JoinCallResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.JoinCallResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTransaction();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getCurrentParticipantsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      30,
      f
    );
  }
  f = message.getSdpAnswer();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.admv2_remote.Jsep.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      50,
      f,
      proto.admv2_remote.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string call_id = 10;
 * @return {string}
 */
proto.admv2_remote.JoinCallResponse.prototype.getCallId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.JoinCallResponse} returns this
 */
proto.admv2_remote.JoinCallResponse.prototype.setCallId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string transaction = 20;
 * @return {string}
 */
proto.admv2_remote.JoinCallResponse.prototype.getTransaction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.JoinCallResponse} returns this
 */
proto.admv2_remote.JoinCallResponse.prototype.setTransaction = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * repeated string current_participants = 30;
 * @return {!Array<string>}
 */
proto.admv2_remote.JoinCallResponse.prototype.getCurrentParticipantsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 30));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.admv2_remote.JoinCallResponse} returns this
 */
proto.admv2_remote.JoinCallResponse.prototype.setCurrentParticipantsList = function(value) {
  return jspb.Message.setField(this, 30, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.admv2_remote.JoinCallResponse} returns this
 */
proto.admv2_remote.JoinCallResponse.prototype.addCurrentParticipants = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 30, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.admv2_remote.JoinCallResponse} returns this
 */
proto.admv2_remote.JoinCallResponse.prototype.clearCurrentParticipantsList = function() {
  return this.setCurrentParticipantsList([]);
};


/**
 * optional Jsep sdp_answer = 40;
 * @return {?proto.admv2_remote.Jsep}
 */
proto.admv2_remote.JoinCallResponse.prototype.getSdpAnswer = function() {
  return /** @type{?proto.admv2_remote.Jsep} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.Jsep, 40));
};


/**
 * @param {?proto.admv2_remote.Jsep|undefined} value
 * @return {!proto.admv2_remote.JoinCallResponse} returns this
*/
proto.admv2_remote.JoinCallResponse.prototype.setSdpAnswer = function(value) {
  return jspb.Message.setWrapperField(this, 40, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.JoinCallResponse} returns this
 */
proto.admv2_remote.JoinCallResponse.prototype.clearSdpAnswer = function() {
  return this.setSdpAnswer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.JoinCallResponse.prototype.hasSdpAnswer = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional Error error = 50;
 * @return {?proto.admv2_remote.Error}
 */
proto.admv2_remote.JoinCallResponse.prototype.getError = function() {
  return /** @type{?proto.admv2_remote.Error} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.Error, 50));
};


/**
 * @param {?proto.admv2_remote.Error|undefined} value
 * @return {!proto.admv2_remote.JoinCallResponse} returns this
*/
proto.admv2_remote.JoinCallResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 50, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.JoinCallResponse} returns this
 */
proto.admv2_remote.JoinCallResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.JoinCallResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 50) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.CallStartedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.CallStartedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.CallStartedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.CallStartedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    callId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    callType: jspb.Message.getFieldWithDefault(msg, 20, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.CallStartedEvent}
 */
proto.admv2_remote.CallStartedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.CallStartedEvent;
  return proto.admv2_remote.CallStartedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.CallStartedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.CallStartedEvent}
 */
proto.admv2_remote.CallStartedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallId(value);
      break;
    case 20:
      var value = /** @type {!proto.admv2_remote.CallType} */ (reader.readEnum());
      msg.setCallType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.CallStartedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.CallStartedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.CallStartedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.CallStartedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCallType();
  if (f !== 0.0) {
    writer.writeEnum(
      20,
      f
    );
  }
};


/**
 * optional string call_id = 10;
 * @return {string}
 */
proto.admv2_remote.CallStartedEvent.prototype.getCallId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.CallStartedEvent} returns this
 */
proto.admv2_remote.CallStartedEvent.prototype.setCallId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional CallType call_type = 20;
 * @return {!proto.admv2_remote.CallType}
 */
proto.admv2_remote.CallStartedEvent.prototype.getCallType = function() {
  return /** @type {!proto.admv2_remote.CallType} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {!proto.admv2_remote.CallType} value
 * @return {!proto.admv2_remote.CallStartedEvent} returns this
 */
proto.admv2_remote.CallStartedEvent.prototype.setCallType = function(value) {
  return jspb.Message.setProto3EnumField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.CallJoinedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.CallJoinedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.CallJoinedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.CallJoinedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    callId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    newParticipant: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.CallJoinedEvent}
 */
proto.admv2_remote.CallJoinedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.CallJoinedEvent;
  return proto.admv2_remote.CallJoinedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.CallJoinedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.CallJoinedEvent}
 */
proto.admv2_remote.CallJoinedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallId(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewParticipant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.CallJoinedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.CallJoinedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.CallJoinedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.CallJoinedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getNewParticipant();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional string call_id = 10;
 * @return {string}
 */
proto.admv2_remote.CallJoinedEvent.prototype.getCallId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.CallJoinedEvent} returns this
 */
proto.admv2_remote.CallJoinedEvent.prototype.setCallId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string new_participant = 20;
 * @return {string}
 */
proto.admv2_remote.CallJoinedEvent.prototype.getNewParticipant = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.CallJoinedEvent} returns this
 */
proto.admv2_remote.CallJoinedEvent.prototype.setNewParticipant = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.CallLeftEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.CallLeftEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.CallLeftEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.CallLeftEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    callId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    participant: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.CallLeftEvent}
 */
proto.admv2_remote.CallLeftEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.CallLeftEvent;
  return proto.admv2_remote.CallLeftEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.CallLeftEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.CallLeftEvent}
 */
proto.admv2_remote.CallLeftEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallId(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setParticipant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.CallLeftEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.CallLeftEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.CallLeftEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.CallLeftEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getParticipant();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional string call_id = 10;
 * @return {string}
 */
proto.admv2_remote.CallLeftEvent.prototype.getCallId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.CallLeftEvent} returns this
 */
proto.admv2_remote.CallLeftEvent.prototype.setCallId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string participant = 20;
 * @return {string}
 */
proto.admv2_remote.CallLeftEvent.prototype.getParticipant = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.CallLeftEvent} returns this
 */
proto.admv2_remote.CallLeftEvent.prototype.setParticipant = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.CallStoppedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.CallStoppedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.CallStoppedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.CallStoppedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    callId: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.CallStoppedEvent}
 */
proto.admv2_remote.CallStoppedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.CallStoppedEvent;
  return proto.admv2_remote.CallStoppedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.CallStoppedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.CallStoppedEvent}
 */
proto.admv2_remote.CallStoppedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.CallStoppedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.CallStoppedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.CallStoppedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.CallStoppedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string call_id = 10;
 * @return {string}
 */
proto.admv2_remote.CallStoppedEvent.prototype.getCallId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.CallStoppedEvent} returns this
 */
proto.admv2_remote.CallStoppedEvent.prototype.setCallId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.ChannelJoinedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.ChannelJoinedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.ChannelJoinedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.ChannelJoinedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.ChannelJoinedEvent}
 */
proto.admv2_remote.ChannelJoinedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.ChannelJoinedEvent;
  return proto.admv2_remote.ChannelJoinedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.ChannelJoinedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.ChannelJoinedEvent}
 */
proto.admv2_remote.ChannelJoinedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.ChannelJoinedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.ChannelJoinedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.ChannelJoinedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.ChannelJoinedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.ChannelCreatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.ChannelCreatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.ChannelCreatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.ChannelCreatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.ChannelCreatedEvent}
 */
proto.admv2_remote.ChannelCreatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.ChannelCreatedEvent;
  return proto.admv2_remote.ChannelCreatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.ChannelCreatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.ChannelCreatedEvent}
 */
proto.admv2_remote.ChannelCreatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.ChannelCreatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.ChannelCreatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.ChannelCreatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.ChannelCreatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.ChannelLeftEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.ChannelLeftEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.ChannelLeftEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.ChannelLeftEvent.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.ChannelLeftEvent}
 */
proto.admv2_remote.ChannelLeftEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.ChannelLeftEvent;
  return proto.admv2_remote.ChannelLeftEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.ChannelLeftEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.ChannelLeftEvent}
 */
proto.admv2_remote.ChannelLeftEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.ChannelLeftEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.ChannelLeftEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.ChannelLeftEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.ChannelLeftEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.ChannelArchivedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.ChannelArchivedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.ChannelArchivedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.ChannelArchivedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.ChannelArchivedEvent}
 */
proto.admv2_remote.ChannelArchivedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.ChannelArchivedEvent;
  return proto.admv2_remote.ChannelArchivedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.ChannelArchivedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.ChannelArchivedEvent}
 */
proto.admv2_remote.ChannelArchivedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.ChannelArchivedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.ChannelArchivedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.ChannelArchivedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.ChannelArchivedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.MessageSentEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.MessageSentEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.MessageSentEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.MessageSentEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 10, 0),
    content: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.MessageSentEvent}
 */
proto.admv2_remote.MessageSentEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.MessageSentEvent;
  return proto.admv2_remote.MessageSentEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.MessageSentEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.MessageSentEvent}
 */
proto.admv2_remote.MessageSentEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {!proto.admv2_remote.MessageType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.MessageSentEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.MessageSentEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.MessageSentEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.MessageSentEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional MessageType type = 10;
 * @return {!proto.admv2_remote.MessageType}
 */
proto.admv2_remote.MessageSentEvent.prototype.getType = function() {
  return /** @type {!proto.admv2_remote.MessageType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.admv2_remote.MessageType} value
 * @return {!proto.admv2_remote.MessageSentEvent} returns this
 */
proto.admv2_remote.MessageSentEvent.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional string content = 20;
 * @return {string}
 */
proto.admv2_remote.MessageSentEvent.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.MessageSentEvent} returns this
 */
proto.admv2_remote.MessageSentEvent.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.admv2_remote.MessagingCommandPayload.oneofGroups_ = [[30,40,50,60,70,80,90,100,110,120]];

/**
 * @enum {number}
 */
proto.admv2_remote.MessagingCommandPayload.FieldCase = {
  FIELD_NOT_SET: 0,
  START_CALL: 30,
  JOIN_CALL: 40,
  LEAVE_CALL: 50,
  STOP_CALL: 60,
  START_BROADCAST: 70,
  END_BROADCAST: 80,
  GATHER_ICE_CANDIDATE: 90,
  SEND_MESSAGE: 100,
  UPSERT_REGISTRATION_TOKEN: 110,
  EXEC_CHANNEL_COMMAND: 120
};

/**
 * @return {proto.admv2_remote.MessagingCommandPayload.FieldCase}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.getFieldCase = function() {
  return /** @type {proto.admv2_remote.MessagingCommandPayload.FieldCase} */(jspb.Message.computeOneofCase(this, proto.admv2_remote.MessagingCommandPayload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.MessagingCommandPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.MessagingCommandPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.MessagingCommandPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    epoch: jspb.Message.getFieldWithDefault(msg, 10, 0),
    channelId: jspb.Message.getFieldWithDefault(msg, 20, ""),
    startCall: (f = msg.getStartCall()) && proto.admv2_remote.StartCallRequest.toObject(includeInstance, f),
    joinCall: (f = msg.getJoinCall()) && proto.admv2_remote.JoinCallRequest.toObject(includeInstance, f),
    leaveCall: (f = msg.getLeaveCall()) && proto.admv2_remote.LeaveCallRequest.toObject(includeInstance, f),
    stopCall: (f = msg.getStopCall()) && proto.admv2_remote.StopCallRequest.toObject(includeInstance, f),
    startBroadcast: (f = msg.getStartBroadcast()) && proto.admv2_remote.StartBroadcastRequest.toObject(includeInstance, f),
    endBroadcast: (f = msg.getEndBroadcast()) && proto.admv2_remote.EndBroadcastRequest.toObject(includeInstance, f),
    gatherIceCandidate: (f = msg.getGatherIceCandidate()) && proto.admv2_remote.GatherIceCandidateRequest.toObject(includeInstance, f),
    sendMessage: (f = msg.getSendMessage()) && proto.admv2_remote.SendMessageRequest.toObject(includeInstance, f),
    upsertRegistrationToken: (f = msg.getUpsertRegistrationToken()) && proto.admv2_remote.UpsertRegistrationTokenRequest.toObject(includeInstance, f),
    execChannelCommand: (f = msg.getExecChannelCommand()) && proto.admv2_remote.ExecuteChannelCommandRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.MessagingCommandPayload}
 */
proto.admv2_remote.MessagingCommandPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.MessagingCommandPayload;
  return proto.admv2_remote.MessagingCommandPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.MessagingCommandPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.MessagingCommandPayload}
 */
proto.admv2_remote.MessagingCommandPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEpoch(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 30:
      var value = new proto.admv2_remote.StartCallRequest;
      reader.readMessage(value,proto.admv2_remote.StartCallRequest.deserializeBinaryFromReader);
      msg.setStartCall(value);
      break;
    case 40:
      var value = new proto.admv2_remote.JoinCallRequest;
      reader.readMessage(value,proto.admv2_remote.JoinCallRequest.deserializeBinaryFromReader);
      msg.setJoinCall(value);
      break;
    case 50:
      var value = new proto.admv2_remote.LeaveCallRequest;
      reader.readMessage(value,proto.admv2_remote.LeaveCallRequest.deserializeBinaryFromReader);
      msg.setLeaveCall(value);
      break;
    case 60:
      var value = new proto.admv2_remote.StopCallRequest;
      reader.readMessage(value,proto.admv2_remote.StopCallRequest.deserializeBinaryFromReader);
      msg.setStopCall(value);
      break;
    case 70:
      var value = new proto.admv2_remote.StartBroadcastRequest;
      reader.readMessage(value,proto.admv2_remote.StartBroadcastRequest.deserializeBinaryFromReader);
      msg.setStartBroadcast(value);
      break;
    case 80:
      var value = new proto.admv2_remote.EndBroadcastRequest;
      reader.readMessage(value,proto.admv2_remote.EndBroadcastRequest.deserializeBinaryFromReader);
      msg.setEndBroadcast(value);
      break;
    case 90:
      var value = new proto.admv2_remote.GatherIceCandidateRequest;
      reader.readMessage(value,proto.admv2_remote.GatherIceCandidateRequest.deserializeBinaryFromReader);
      msg.setGatherIceCandidate(value);
      break;
    case 100:
      var value = new proto.admv2_remote.SendMessageRequest;
      reader.readMessage(value,proto.admv2_remote.SendMessageRequest.deserializeBinaryFromReader);
      msg.setSendMessage(value);
      break;
    case 110:
      var value = new proto.admv2_remote.UpsertRegistrationTokenRequest;
      reader.readMessage(value,proto.admv2_remote.UpsertRegistrationTokenRequest.deserializeBinaryFromReader);
      msg.setUpsertRegistrationToken(value);
      break;
    case 120:
      var value = new proto.admv2_remote.ExecuteChannelCommandRequest;
      reader.readMessage(value,proto.admv2_remote.ExecuteChannelCommandRequest.deserializeBinaryFromReader);
      msg.setExecChannelCommand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.MessagingCommandPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.MessagingCommandPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.MessagingCommandPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEpoch();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getStartCall();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.admv2_remote.StartCallRequest.serializeBinaryToWriter
    );
  }
  f = message.getJoinCall();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.admv2_remote.JoinCallRequest.serializeBinaryToWriter
    );
  }
  f = message.getLeaveCall();
  if (f != null) {
    writer.writeMessage(
      50,
      f,
      proto.admv2_remote.LeaveCallRequest.serializeBinaryToWriter
    );
  }
  f = message.getStopCall();
  if (f != null) {
    writer.writeMessage(
      60,
      f,
      proto.admv2_remote.StopCallRequest.serializeBinaryToWriter
    );
  }
  f = message.getStartBroadcast();
  if (f != null) {
    writer.writeMessage(
      70,
      f,
      proto.admv2_remote.StartBroadcastRequest.serializeBinaryToWriter
    );
  }
  f = message.getEndBroadcast();
  if (f != null) {
    writer.writeMessage(
      80,
      f,
      proto.admv2_remote.EndBroadcastRequest.serializeBinaryToWriter
    );
  }
  f = message.getGatherIceCandidate();
  if (f != null) {
    writer.writeMessage(
      90,
      f,
      proto.admv2_remote.GatherIceCandidateRequest.serializeBinaryToWriter
    );
  }
  f = message.getSendMessage();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.admv2_remote.SendMessageRequest.serializeBinaryToWriter
    );
  }
  f = message.getUpsertRegistrationToken();
  if (f != null) {
    writer.writeMessage(
      110,
      f,
      proto.admv2_remote.UpsertRegistrationTokenRequest.serializeBinaryToWriter
    );
  }
  f = message.getExecChannelCommand();
  if (f != null) {
    writer.writeMessage(
      120,
      f,
      proto.admv2_remote.ExecuteChannelCommandRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 epoch = 10;
 * @return {number}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.getEpoch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
 */
proto.admv2_remote.MessagingCommandPayload.prototype.setEpoch = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string channel_id = 20;
 * @return {string}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
 */
proto.admv2_remote.MessagingCommandPayload.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional StartCallRequest start_call = 30;
 * @return {?proto.admv2_remote.StartCallRequest}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.getStartCall = function() {
  return /** @type{?proto.admv2_remote.StartCallRequest} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.StartCallRequest, 30));
};


/**
 * @param {?proto.admv2_remote.StartCallRequest|undefined} value
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
*/
proto.admv2_remote.MessagingCommandPayload.prototype.setStartCall = function(value) {
  return jspb.Message.setOneofWrapperField(this, 30, proto.admv2_remote.MessagingCommandPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
 */
proto.admv2_remote.MessagingCommandPayload.prototype.clearStartCall = function() {
  return this.setStartCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.hasStartCall = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional JoinCallRequest join_call = 40;
 * @return {?proto.admv2_remote.JoinCallRequest}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.getJoinCall = function() {
  return /** @type{?proto.admv2_remote.JoinCallRequest} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.JoinCallRequest, 40));
};


/**
 * @param {?proto.admv2_remote.JoinCallRequest|undefined} value
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
*/
proto.admv2_remote.MessagingCommandPayload.prototype.setJoinCall = function(value) {
  return jspb.Message.setOneofWrapperField(this, 40, proto.admv2_remote.MessagingCommandPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
 */
proto.admv2_remote.MessagingCommandPayload.prototype.clearJoinCall = function() {
  return this.setJoinCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.hasJoinCall = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional LeaveCallRequest leave_call = 50;
 * @return {?proto.admv2_remote.LeaveCallRequest}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.getLeaveCall = function() {
  return /** @type{?proto.admv2_remote.LeaveCallRequest} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.LeaveCallRequest, 50));
};


/**
 * @param {?proto.admv2_remote.LeaveCallRequest|undefined} value
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
*/
proto.admv2_remote.MessagingCommandPayload.prototype.setLeaveCall = function(value) {
  return jspb.Message.setOneofWrapperField(this, 50, proto.admv2_remote.MessagingCommandPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
 */
proto.admv2_remote.MessagingCommandPayload.prototype.clearLeaveCall = function() {
  return this.setLeaveCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.hasLeaveCall = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * optional StopCallRequest stop_call = 60;
 * @return {?proto.admv2_remote.StopCallRequest}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.getStopCall = function() {
  return /** @type{?proto.admv2_remote.StopCallRequest} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.StopCallRequest, 60));
};


/**
 * @param {?proto.admv2_remote.StopCallRequest|undefined} value
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
*/
proto.admv2_remote.MessagingCommandPayload.prototype.setStopCall = function(value) {
  return jspb.Message.setOneofWrapperField(this, 60, proto.admv2_remote.MessagingCommandPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
 */
proto.admv2_remote.MessagingCommandPayload.prototype.clearStopCall = function() {
  return this.setStopCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.hasStopCall = function() {
  return jspb.Message.getField(this, 60) != null;
};


/**
 * optional StartBroadcastRequest start_broadcast = 70;
 * @return {?proto.admv2_remote.StartBroadcastRequest}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.getStartBroadcast = function() {
  return /** @type{?proto.admv2_remote.StartBroadcastRequest} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.StartBroadcastRequest, 70));
};


/**
 * @param {?proto.admv2_remote.StartBroadcastRequest|undefined} value
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
*/
proto.admv2_remote.MessagingCommandPayload.prototype.setStartBroadcast = function(value) {
  return jspb.Message.setOneofWrapperField(this, 70, proto.admv2_remote.MessagingCommandPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
 */
proto.admv2_remote.MessagingCommandPayload.prototype.clearStartBroadcast = function() {
  return this.setStartBroadcast(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.hasStartBroadcast = function() {
  return jspb.Message.getField(this, 70) != null;
};


/**
 * optional EndBroadcastRequest end_broadcast = 80;
 * @return {?proto.admv2_remote.EndBroadcastRequest}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.getEndBroadcast = function() {
  return /** @type{?proto.admv2_remote.EndBroadcastRequest} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.EndBroadcastRequest, 80));
};


/**
 * @param {?proto.admv2_remote.EndBroadcastRequest|undefined} value
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
*/
proto.admv2_remote.MessagingCommandPayload.prototype.setEndBroadcast = function(value) {
  return jspb.Message.setOneofWrapperField(this, 80, proto.admv2_remote.MessagingCommandPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
 */
proto.admv2_remote.MessagingCommandPayload.prototype.clearEndBroadcast = function() {
  return this.setEndBroadcast(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.hasEndBroadcast = function() {
  return jspb.Message.getField(this, 80) != null;
};


/**
 * optional GatherIceCandidateRequest gather_ice_candidate = 90;
 * @return {?proto.admv2_remote.GatherIceCandidateRequest}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.getGatherIceCandidate = function() {
  return /** @type{?proto.admv2_remote.GatherIceCandidateRequest} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.GatherIceCandidateRequest, 90));
};


/**
 * @param {?proto.admv2_remote.GatherIceCandidateRequest|undefined} value
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
*/
proto.admv2_remote.MessagingCommandPayload.prototype.setGatherIceCandidate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 90, proto.admv2_remote.MessagingCommandPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
 */
proto.admv2_remote.MessagingCommandPayload.prototype.clearGatherIceCandidate = function() {
  return this.setGatherIceCandidate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.hasGatherIceCandidate = function() {
  return jspb.Message.getField(this, 90) != null;
};


/**
 * optional SendMessageRequest send_message = 100;
 * @return {?proto.admv2_remote.SendMessageRequest}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.getSendMessage = function() {
  return /** @type{?proto.admv2_remote.SendMessageRequest} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.SendMessageRequest, 100));
};


/**
 * @param {?proto.admv2_remote.SendMessageRequest|undefined} value
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
*/
proto.admv2_remote.MessagingCommandPayload.prototype.setSendMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 100, proto.admv2_remote.MessagingCommandPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
 */
proto.admv2_remote.MessagingCommandPayload.prototype.clearSendMessage = function() {
  return this.setSendMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.hasSendMessage = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional UpsertRegistrationTokenRequest upsert_registration_token = 110;
 * @return {?proto.admv2_remote.UpsertRegistrationTokenRequest}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.getUpsertRegistrationToken = function() {
  return /** @type{?proto.admv2_remote.UpsertRegistrationTokenRequest} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.UpsertRegistrationTokenRequest, 110));
};


/**
 * @param {?proto.admv2_remote.UpsertRegistrationTokenRequest|undefined} value
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
*/
proto.admv2_remote.MessagingCommandPayload.prototype.setUpsertRegistrationToken = function(value) {
  return jspb.Message.setOneofWrapperField(this, 110, proto.admv2_remote.MessagingCommandPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
 */
proto.admv2_remote.MessagingCommandPayload.prototype.clearUpsertRegistrationToken = function() {
  return this.setUpsertRegistrationToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.hasUpsertRegistrationToken = function() {
  return jspb.Message.getField(this, 110) != null;
};


/**
 * optional ExecuteChannelCommandRequest exec_channel_command = 120;
 * @return {?proto.admv2_remote.ExecuteChannelCommandRequest}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.getExecChannelCommand = function() {
  return /** @type{?proto.admv2_remote.ExecuteChannelCommandRequest} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.ExecuteChannelCommandRequest, 120));
};


/**
 * @param {?proto.admv2_remote.ExecuteChannelCommandRequest|undefined} value
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
*/
proto.admv2_remote.MessagingCommandPayload.prototype.setExecChannelCommand = function(value) {
  return jspb.Message.setOneofWrapperField(this, 120, proto.admv2_remote.MessagingCommandPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingCommandPayload} returns this
 */
proto.admv2_remote.MessagingCommandPayload.prototype.clearExecChannelCommand = function() {
  return this.setExecChannelCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingCommandPayload.prototype.hasExecChannelCommand = function() {
  return jspb.Message.getField(this, 120) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.admv2_remote.MessagingResponsePayload.oneofGroups_ = [[30,40]];

/**
 * @enum {number}
 */
proto.admv2_remote.MessagingResponsePayload.FieldCase = {
  FIELD_NOT_SET: 0,
  START_CALL_RESPONSE: 30,
  JOIN_CALL_RESPONSE: 40
};

/**
 * @return {proto.admv2_remote.MessagingResponsePayload.FieldCase}
 */
proto.admv2_remote.MessagingResponsePayload.prototype.getFieldCase = function() {
  return /** @type {proto.admv2_remote.MessagingResponsePayload.FieldCase} */(jspb.Message.computeOneofCase(this, proto.admv2_remote.MessagingResponsePayload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.MessagingResponsePayload.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.MessagingResponsePayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.MessagingResponsePayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.MessagingResponsePayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    epoch: jspb.Message.getFieldWithDefault(msg, 10, 0),
    channelId: jspb.Message.getFieldWithDefault(msg, 20, ""),
    startCallResponse: (f = msg.getStartCallResponse()) && proto.admv2_remote.StartCallResponse.toObject(includeInstance, f),
    joinCallResponse: (f = msg.getJoinCallResponse()) && proto.admv2_remote.JoinCallResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.MessagingResponsePayload}
 */
proto.admv2_remote.MessagingResponsePayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.MessagingResponsePayload;
  return proto.admv2_remote.MessagingResponsePayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.MessagingResponsePayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.MessagingResponsePayload}
 */
proto.admv2_remote.MessagingResponsePayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEpoch(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 30:
      var value = new proto.admv2_remote.StartCallResponse;
      reader.readMessage(value,proto.admv2_remote.StartCallResponse.deserializeBinaryFromReader);
      msg.setStartCallResponse(value);
      break;
    case 40:
      var value = new proto.admv2_remote.JoinCallResponse;
      reader.readMessage(value,proto.admv2_remote.JoinCallResponse.deserializeBinaryFromReader);
      msg.setJoinCallResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.MessagingResponsePayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.MessagingResponsePayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.MessagingResponsePayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.MessagingResponsePayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEpoch();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getStartCallResponse();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.admv2_remote.StartCallResponse.serializeBinaryToWriter
    );
  }
  f = message.getJoinCallResponse();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.admv2_remote.JoinCallResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 epoch = 10;
 * @return {number}
 */
proto.admv2_remote.MessagingResponsePayload.prototype.getEpoch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.admv2_remote.MessagingResponsePayload} returns this
 */
proto.admv2_remote.MessagingResponsePayload.prototype.setEpoch = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string channel_id = 20;
 * @return {string}
 */
proto.admv2_remote.MessagingResponsePayload.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.MessagingResponsePayload} returns this
 */
proto.admv2_remote.MessagingResponsePayload.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional StartCallResponse start_call_response = 30;
 * @return {?proto.admv2_remote.StartCallResponse}
 */
proto.admv2_remote.MessagingResponsePayload.prototype.getStartCallResponse = function() {
  return /** @type{?proto.admv2_remote.StartCallResponse} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.StartCallResponse, 30));
};


/**
 * @param {?proto.admv2_remote.StartCallResponse|undefined} value
 * @return {!proto.admv2_remote.MessagingResponsePayload} returns this
*/
proto.admv2_remote.MessagingResponsePayload.prototype.setStartCallResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 30, proto.admv2_remote.MessagingResponsePayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingResponsePayload} returns this
 */
proto.admv2_remote.MessagingResponsePayload.prototype.clearStartCallResponse = function() {
  return this.setStartCallResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingResponsePayload.prototype.hasStartCallResponse = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional JoinCallResponse join_call_response = 40;
 * @return {?proto.admv2_remote.JoinCallResponse}
 */
proto.admv2_remote.MessagingResponsePayload.prototype.getJoinCallResponse = function() {
  return /** @type{?proto.admv2_remote.JoinCallResponse} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.JoinCallResponse, 40));
};


/**
 * @param {?proto.admv2_remote.JoinCallResponse|undefined} value
 * @return {!proto.admv2_remote.MessagingResponsePayload} returns this
*/
proto.admv2_remote.MessagingResponsePayload.prototype.setJoinCallResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 40, proto.admv2_remote.MessagingResponsePayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingResponsePayload} returns this
 */
proto.admv2_remote.MessagingResponsePayload.prototype.clearJoinCallResponse = function() {
  return this.setJoinCallResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingResponsePayload.prototype.hasJoinCallResponse = function() {
  return jspb.Message.getField(this, 40) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.admv2_remote.MessagingEventPayload.oneofGroups_ = [[40,50,60,70,80,90,100,110,120]];

/**
 * @enum {number}
 */
proto.admv2_remote.MessagingEventPayload.FieldCase = {
  FIELD_NOT_SET: 0,
  CALL_STARTED: 40,
  CALL_JOINED: 50,
  CALL_LEFT: 60,
  CALL_STOPPED: 70,
  CHANNEL_JOINED: 80,
  CHANNEL_CREATED: 90,
  CHANNEL_LEFT: 100,
  CHANNEL_ARCHIVED: 110,
  MESSAGE_SENT: 120
};

/**
 * @return {proto.admv2_remote.MessagingEventPayload.FieldCase}
 */
proto.admv2_remote.MessagingEventPayload.prototype.getFieldCase = function() {
  return /** @type {proto.admv2_remote.MessagingEventPayload.FieldCase} */(jspb.Message.computeOneofCase(this, proto.admv2_remote.MessagingEventPayload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.MessagingEventPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.MessagingEventPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.MessagingEventPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.MessagingEventPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    epoch: jspb.Message.getFieldWithDefault(msg, 10, 0),
    channelId: jspb.Message.getFieldWithDefault(msg, 20, ""),
    callStarted: (f = msg.getCallStarted()) && proto.admv2_remote.CallStartedEvent.toObject(includeInstance, f),
    callJoined: (f = msg.getCallJoined()) && proto.admv2_remote.CallJoinedEvent.toObject(includeInstance, f),
    callLeft: (f = msg.getCallLeft()) && proto.admv2_remote.CallLeftEvent.toObject(includeInstance, f),
    callStopped: (f = msg.getCallStopped()) && proto.admv2_remote.CallStoppedEvent.toObject(includeInstance, f),
    channelJoined: (f = msg.getChannelJoined()) && proto.admv2_remote.ChannelJoinedEvent.toObject(includeInstance, f),
    channelCreated: (f = msg.getChannelCreated()) && proto.admv2_remote.ChannelCreatedEvent.toObject(includeInstance, f),
    channelLeft: (f = msg.getChannelLeft()) && proto.admv2_remote.ChannelLeftEvent.toObject(includeInstance, f),
    channelArchived: (f = msg.getChannelArchived()) && proto.admv2_remote.ChannelArchivedEvent.toObject(includeInstance, f),
    messageSent: (f = msg.getMessageSent()) && proto.admv2_remote.MessageSentEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.MessagingEventPayload}
 */
proto.admv2_remote.MessagingEventPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.MessagingEventPayload;
  return proto.admv2_remote.MessagingEventPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.MessagingEventPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.MessagingEventPayload}
 */
proto.admv2_remote.MessagingEventPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEpoch(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 40:
      var value = new proto.admv2_remote.CallStartedEvent;
      reader.readMessage(value,proto.admv2_remote.CallStartedEvent.deserializeBinaryFromReader);
      msg.setCallStarted(value);
      break;
    case 50:
      var value = new proto.admv2_remote.CallJoinedEvent;
      reader.readMessage(value,proto.admv2_remote.CallJoinedEvent.deserializeBinaryFromReader);
      msg.setCallJoined(value);
      break;
    case 60:
      var value = new proto.admv2_remote.CallLeftEvent;
      reader.readMessage(value,proto.admv2_remote.CallLeftEvent.deserializeBinaryFromReader);
      msg.setCallLeft(value);
      break;
    case 70:
      var value = new proto.admv2_remote.CallStoppedEvent;
      reader.readMessage(value,proto.admv2_remote.CallStoppedEvent.deserializeBinaryFromReader);
      msg.setCallStopped(value);
      break;
    case 80:
      var value = new proto.admv2_remote.ChannelJoinedEvent;
      reader.readMessage(value,proto.admv2_remote.ChannelJoinedEvent.deserializeBinaryFromReader);
      msg.setChannelJoined(value);
      break;
    case 90:
      var value = new proto.admv2_remote.ChannelCreatedEvent;
      reader.readMessage(value,proto.admv2_remote.ChannelCreatedEvent.deserializeBinaryFromReader);
      msg.setChannelCreated(value);
      break;
    case 100:
      var value = new proto.admv2_remote.ChannelLeftEvent;
      reader.readMessage(value,proto.admv2_remote.ChannelLeftEvent.deserializeBinaryFromReader);
      msg.setChannelLeft(value);
      break;
    case 110:
      var value = new proto.admv2_remote.ChannelArchivedEvent;
      reader.readMessage(value,proto.admv2_remote.ChannelArchivedEvent.deserializeBinaryFromReader);
      msg.setChannelArchived(value);
      break;
    case 120:
      var value = new proto.admv2_remote.MessageSentEvent;
      reader.readMessage(value,proto.admv2_remote.MessageSentEvent.deserializeBinaryFromReader);
      msg.setMessageSent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.MessagingEventPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.MessagingEventPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.MessagingEventPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.MessagingEventPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEpoch();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getCallStarted();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.admv2_remote.CallStartedEvent.serializeBinaryToWriter
    );
  }
  f = message.getCallJoined();
  if (f != null) {
    writer.writeMessage(
      50,
      f,
      proto.admv2_remote.CallJoinedEvent.serializeBinaryToWriter
    );
  }
  f = message.getCallLeft();
  if (f != null) {
    writer.writeMessage(
      60,
      f,
      proto.admv2_remote.CallLeftEvent.serializeBinaryToWriter
    );
  }
  f = message.getCallStopped();
  if (f != null) {
    writer.writeMessage(
      70,
      f,
      proto.admv2_remote.CallStoppedEvent.serializeBinaryToWriter
    );
  }
  f = message.getChannelJoined();
  if (f != null) {
    writer.writeMessage(
      80,
      f,
      proto.admv2_remote.ChannelJoinedEvent.serializeBinaryToWriter
    );
  }
  f = message.getChannelCreated();
  if (f != null) {
    writer.writeMessage(
      90,
      f,
      proto.admv2_remote.ChannelCreatedEvent.serializeBinaryToWriter
    );
  }
  f = message.getChannelLeft();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.admv2_remote.ChannelLeftEvent.serializeBinaryToWriter
    );
  }
  f = message.getChannelArchived();
  if (f != null) {
    writer.writeMessage(
      110,
      f,
      proto.admv2_remote.ChannelArchivedEvent.serializeBinaryToWriter
    );
  }
  f = message.getMessageSent();
  if (f != null) {
    writer.writeMessage(
      120,
      f,
      proto.admv2_remote.MessageSentEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 epoch = 10;
 * @return {number}
 */
proto.admv2_remote.MessagingEventPayload.prototype.getEpoch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
 */
proto.admv2_remote.MessagingEventPayload.prototype.setEpoch = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string channel_id = 20;
 * @return {string}
 */
proto.admv2_remote.MessagingEventPayload.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
 */
proto.admv2_remote.MessagingEventPayload.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional CallStartedEvent call_started = 40;
 * @return {?proto.admv2_remote.CallStartedEvent}
 */
proto.admv2_remote.MessagingEventPayload.prototype.getCallStarted = function() {
  return /** @type{?proto.admv2_remote.CallStartedEvent} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.CallStartedEvent, 40));
};


/**
 * @param {?proto.admv2_remote.CallStartedEvent|undefined} value
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
*/
proto.admv2_remote.MessagingEventPayload.prototype.setCallStarted = function(value) {
  return jspb.Message.setOneofWrapperField(this, 40, proto.admv2_remote.MessagingEventPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
 */
proto.admv2_remote.MessagingEventPayload.prototype.clearCallStarted = function() {
  return this.setCallStarted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingEventPayload.prototype.hasCallStarted = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional CallJoinedEvent call_joined = 50;
 * @return {?proto.admv2_remote.CallJoinedEvent}
 */
proto.admv2_remote.MessagingEventPayload.prototype.getCallJoined = function() {
  return /** @type{?proto.admv2_remote.CallJoinedEvent} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.CallJoinedEvent, 50));
};


/**
 * @param {?proto.admv2_remote.CallJoinedEvent|undefined} value
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
*/
proto.admv2_remote.MessagingEventPayload.prototype.setCallJoined = function(value) {
  return jspb.Message.setOneofWrapperField(this, 50, proto.admv2_remote.MessagingEventPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
 */
proto.admv2_remote.MessagingEventPayload.prototype.clearCallJoined = function() {
  return this.setCallJoined(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingEventPayload.prototype.hasCallJoined = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * optional CallLeftEvent call_left = 60;
 * @return {?proto.admv2_remote.CallLeftEvent}
 */
proto.admv2_remote.MessagingEventPayload.prototype.getCallLeft = function() {
  return /** @type{?proto.admv2_remote.CallLeftEvent} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.CallLeftEvent, 60));
};


/**
 * @param {?proto.admv2_remote.CallLeftEvent|undefined} value
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
*/
proto.admv2_remote.MessagingEventPayload.prototype.setCallLeft = function(value) {
  return jspb.Message.setOneofWrapperField(this, 60, proto.admv2_remote.MessagingEventPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
 */
proto.admv2_remote.MessagingEventPayload.prototype.clearCallLeft = function() {
  return this.setCallLeft(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingEventPayload.prototype.hasCallLeft = function() {
  return jspb.Message.getField(this, 60) != null;
};


/**
 * optional CallStoppedEvent call_stopped = 70;
 * @return {?proto.admv2_remote.CallStoppedEvent}
 */
proto.admv2_remote.MessagingEventPayload.prototype.getCallStopped = function() {
  return /** @type{?proto.admv2_remote.CallStoppedEvent} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.CallStoppedEvent, 70));
};


/**
 * @param {?proto.admv2_remote.CallStoppedEvent|undefined} value
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
*/
proto.admv2_remote.MessagingEventPayload.prototype.setCallStopped = function(value) {
  return jspb.Message.setOneofWrapperField(this, 70, proto.admv2_remote.MessagingEventPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
 */
proto.admv2_remote.MessagingEventPayload.prototype.clearCallStopped = function() {
  return this.setCallStopped(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingEventPayload.prototype.hasCallStopped = function() {
  return jspb.Message.getField(this, 70) != null;
};


/**
 * optional ChannelJoinedEvent channel_joined = 80;
 * @return {?proto.admv2_remote.ChannelJoinedEvent}
 */
proto.admv2_remote.MessagingEventPayload.prototype.getChannelJoined = function() {
  return /** @type{?proto.admv2_remote.ChannelJoinedEvent} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.ChannelJoinedEvent, 80));
};


/**
 * @param {?proto.admv2_remote.ChannelJoinedEvent|undefined} value
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
*/
proto.admv2_remote.MessagingEventPayload.prototype.setChannelJoined = function(value) {
  return jspb.Message.setOneofWrapperField(this, 80, proto.admv2_remote.MessagingEventPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
 */
proto.admv2_remote.MessagingEventPayload.prototype.clearChannelJoined = function() {
  return this.setChannelJoined(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingEventPayload.prototype.hasChannelJoined = function() {
  return jspb.Message.getField(this, 80) != null;
};


/**
 * optional ChannelCreatedEvent channel_created = 90;
 * @return {?proto.admv2_remote.ChannelCreatedEvent}
 */
proto.admv2_remote.MessagingEventPayload.prototype.getChannelCreated = function() {
  return /** @type{?proto.admv2_remote.ChannelCreatedEvent} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.ChannelCreatedEvent, 90));
};


/**
 * @param {?proto.admv2_remote.ChannelCreatedEvent|undefined} value
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
*/
proto.admv2_remote.MessagingEventPayload.prototype.setChannelCreated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 90, proto.admv2_remote.MessagingEventPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
 */
proto.admv2_remote.MessagingEventPayload.prototype.clearChannelCreated = function() {
  return this.setChannelCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingEventPayload.prototype.hasChannelCreated = function() {
  return jspb.Message.getField(this, 90) != null;
};


/**
 * optional ChannelLeftEvent channel_left = 100;
 * @return {?proto.admv2_remote.ChannelLeftEvent}
 */
proto.admv2_remote.MessagingEventPayload.prototype.getChannelLeft = function() {
  return /** @type{?proto.admv2_remote.ChannelLeftEvent} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.ChannelLeftEvent, 100));
};


/**
 * @param {?proto.admv2_remote.ChannelLeftEvent|undefined} value
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
*/
proto.admv2_remote.MessagingEventPayload.prototype.setChannelLeft = function(value) {
  return jspb.Message.setOneofWrapperField(this, 100, proto.admv2_remote.MessagingEventPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
 */
proto.admv2_remote.MessagingEventPayload.prototype.clearChannelLeft = function() {
  return this.setChannelLeft(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingEventPayload.prototype.hasChannelLeft = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional ChannelArchivedEvent channel_archived = 110;
 * @return {?proto.admv2_remote.ChannelArchivedEvent}
 */
proto.admv2_remote.MessagingEventPayload.prototype.getChannelArchived = function() {
  return /** @type{?proto.admv2_remote.ChannelArchivedEvent} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.ChannelArchivedEvent, 110));
};


/**
 * @param {?proto.admv2_remote.ChannelArchivedEvent|undefined} value
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
*/
proto.admv2_remote.MessagingEventPayload.prototype.setChannelArchived = function(value) {
  return jspb.Message.setOneofWrapperField(this, 110, proto.admv2_remote.MessagingEventPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
 */
proto.admv2_remote.MessagingEventPayload.prototype.clearChannelArchived = function() {
  return this.setChannelArchived(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingEventPayload.prototype.hasChannelArchived = function() {
  return jspb.Message.getField(this, 110) != null;
};


/**
 * optional MessageSentEvent message_sent = 120;
 * @return {?proto.admv2_remote.MessageSentEvent}
 */
proto.admv2_remote.MessagingEventPayload.prototype.getMessageSent = function() {
  return /** @type{?proto.admv2_remote.MessageSentEvent} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.MessageSentEvent, 120));
};


/**
 * @param {?proto.admv2_remote.MessageSentEvent|undefined} value
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
*/
proto.admv2_remote.MessagingEventPayload.prototype.setMessageSent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 120, proto.admv2_remote.MessagingEventPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.MessagingEventPayload} returns this
 */
proto.admv2_remote.MessagingEventPayload.prototype.clearMessageSent = function() {
  return this.setMessageSent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.MessagingEventPayload.prototype.hasMessageSent = function() {
  return jspb.Message.getField(this, 120) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.admv2_remote.Content.oneofGroups_ = [[100]];

/**
 * @enum {number}
 */
proto.admv2_remote.Content.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  BYTES: 100
};

/**
 * @return {proto.admv2_remote.Content.PayloadCase}
 */
proto.admv2_remote.Content.prototype.getPayloadCase = function() {
  return /** @type {proto.admv2_remote.Content.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.admv2_remote.Content.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.Content.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.Content.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.Content} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.Content.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bytes: msg.getBytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.Content}
 */
proto.admv2_remote.Content.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.Content;
  return proto.admv2_remote.Content.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.Content} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.Content}
 */
proto.admv2_remote.Content.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.admv2_remote.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 100:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.Content.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.Content.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.Content} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.Content.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 100));
  if (f != null) {
    writer.writeBytes(
      100,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.admv2_remote.Content.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.admv2_remote.Content} returns this
 */
proto.admv2_remote.Content.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Type type = 2;
 * @return {!proto.admv2_remote.Type}
 */
proto.admv2_remote.Content.prototype.getType = function() {
  return /** @type {!proto.admv2_remote.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.admv2_remote.Type} value
 * @return {!proto.admv2_remote.Content} returns this
 */
proto.admv2_remote.Content.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bytes bytes = 100;
 * @return {!(string|Uint8Array)}
 */
proto.admv2_remote.Content.prototype.getBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 100, ""));
};


/**
 * optional bytes bytes = 100;
 * This is a type-conversion wrapper around `getBytes()`
 * @return {string}
 */
proto.admv2_remote.Content.prototype.getBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytes()));
};


/**
 * optional bytes bytes = 100;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytes()`
 * @return {!Uint8Array}
 */
proto.admv2_remote.Content.prototype.getBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.admv2_remote.Content} returns this
 */
proto.admv2_remote.Content.prototype.setBytes = function(value) {
  return jspb.Message.setOneofField(this, 100, proto.admv2_remote.Content.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.admv2_remote.Content} returns this
 */
proto.admv2_remote.Content.prototype.clearBytes = function() {
  return jspb.Message.setOneofField(this, 100, proto.admv2_remote.Content.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.Content.prototype.hasBytes = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admv2_remote.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.admv2_remote.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admv2_remote.Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: (f = msg.getContent()) && proto.admv2_remote.Content.toObject(includeInstance, f),
    signature: msg.getSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admv2_remote.Message}
 */
proto.admv2_remote.Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admv2_remote.Message;
  return proto.admv2_remote.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admv2_remote.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admv2_remote.Message}
 */
proto.admv2_remote.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = new proto.admv2_remote.Content;
      reader.readMessage(value,proto.admv2_remote.Content.deserializeBinaryFromReader);
      msg.setContent(value);
      break;
    case 20:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admv2_remote.Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admv2_remote.Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admv2_remote.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admv2_remote.Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.admv2_remote.Content.serializeBinaryToWriter
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      20,
      f
    );
  }
};


/**
 * optional Content content = 10;
 * @return {?proto.admv2_remote.Content}
 */
proto.admv2_remote.Message.prototype.getContent = function() {
  return /** @type{?proto.admv2_remote.Content} */ (
    jspb.Message.getWrapperField(this, proto.admv2_remote.Content, 10));
};


/**
 * @param {?proto.admv2_remote.Content|undefined} value
 * @return {!proto.admv2_remote.Message} returns this
*/
proto.admv2_remote.Message.prototype.setContent = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.admv2_remote.Message} returns this
 */
proto.admv2_remote.Message.prototype.clearContent = function() {
  return this.setContent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admv2_remote.Message.prototype.hasContent = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bytes signature = 20;
 * @return {!(string|Uint8Array)}
 */
proto.admv2_remote.Message.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * optional bytes signature = 20;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.admv2_remote.Message.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 20;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.admv2_remote.Message.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.admv2_remote.Message} returns this
 */
proto.admv2_remote.Message.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 20, value);
};


/**
 * @enum {number}
 */
proto.admv2_remote.ErrorCode = {
  ERROR_CODE_NOT_SET: 0,
  ERROR_CODE_CHANNEL_NOT_FOUND: 10,
  ERROR_CODE_CHANNEL_IS_EXISTING: 20
};

/**
 * @enum {number}
 */
proto.admv2_remote.SdpType = {
  SDP_TYPE_NOT_SET: 0,
  SDP_TYPE_OFFER: 10,
  SDP_TYPE_ANSWER: 20
};

/**
 * @enum {number}
 */
proto.admv2_remote.ChannelCommand = {
  CHANNEL_COMMAND_NOT_SET: 0,
  CHANNEL_COMMAND_JOIN: 10,
  CHANNEL_COMMAND_CREATE: 20,
  CHANNEL_COMMAND_LEAVE: 30,
  CHANNEL_COMMAND_ARCHIVE: 40
};

/**
 * @enum {number}
 */
proto.admv2_remote.MessageType = {
  MESSAGE_TYPE_NOT_SET: 0,
  MESSAGE_TYPE_TEXT: 10,
  MESSAGE_TYPE_IMAGE: 20,
  MESSAGE_TYPE_VIDEO: 30,
  MESSAGE_TYPE_VOICE: 40,
  MESSAGE_TYPE_FILE: 50
};

/**
 * @enum {number}
 */
proto.admv2_remote.CallType = {
  CALL_TYPE_NOT_SET: 0,
  CALL_TYPE_VOICE: 1,
  CALL_TYPE_VIDEO: 2
};

/**
 * @enum {number}
 */
proto.admv2_remote.Type = {
  MESSAGE: 0,
  ACK_RECEIVED: 200,
  ACK_UNPROCESSABLE: 500,
  ACK_ERROR: 501
};

goog.object.extend(exports, proto.admv2_remote);
